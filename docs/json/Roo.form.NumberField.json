{
  "props": [
    {
      "name": "allowDecimals",
      "type": "Boolean",
      "desc": "False to disallow decimal values (defaults to true)",
      "memberOf": ""
    },
    {
      "name": "allowNegative",
      "type": "Boolean",
      "desc": "False to prevent entering a negative sign (defaults to true)",
      "memberOf": ""
    },
    {
      "name": "decimalPrecision",
      "type": "Number",
      "desc": "The maximum precision to display after the decimal separator (defaults to 2)",
      "memberOf": ""
    },
    {
      "name": "decimalSeparator",
      "type": "String",
      "desc": "Character(s) to allow as the decimal separator (defaults to '.')",
      "memberOf": ""
    },
    {
      "name": "fieldClass",
      "type": "String",
      "desc": "The default CSS class for the field (defaults to \"x-form-field x-form-num-field\")",
      "memberOf": ""
    },
    {
      "name": "maxText",
      "type": "String",
      "desc": "Error text to display if the maximum value validation fails (defaults to \"The maximum value for this field is {maxValue}\")",
      "memberOf": ""
    },
    {
      "name": "maxValue",
      "type": "Number",
      "desc": "The maximum allowed value (defaults to Number.MAX_VALUE)",
      "memberOf": ""
    },
    {
      "name": "minText",
      "type": "String",
      "desc": "Error text to display if the minimum value validation fails (defaults to \"The minimum value for this field is {minValue}\")",
      "memberOf": ""
    },
    {
      "name": "minValue",
      "type": "Number",
      "desc": "The minimum allowed value (defaults to Number.NEGATIVE_INFINITY)",
      "memberOf": ""
    },
    {
      "name": "nanText",
      "type": "String",
      "desc": "Error text to display if the value is not a valid number.  For example, this can happen\nif a valid character like '.' or '-' is left in the field with no number (defaults to \"{value} is not a valid number\")",
      "memberOf": ""
    }
  ],
  "events": []
}