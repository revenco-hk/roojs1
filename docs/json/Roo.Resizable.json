{
  "props": [
    {
      "name": "adjustments",
      "type": "Array/String",
      "desc": "String \"auto\" or an array [width, height] with values to be <b>added</b> to the\nresize operation's new size (defaults to [0, 0])",
      "memberOf": ""
    },
    {
      "name": "animate",
      "type": "Boolean",
      "desc": "True to animate the resize (not compatible with dynamic sizing, defaults to false)",
      "memberOf": ""
    },
    {
      "name": "constrainTo",
      "type": "String/HTMLElement/Element",
      "desc": "Constrain the resize to a particular element",
      "memberOf": ""
    },
    {
      "name": "disableTrackOver",
      "type": "Boolean",
      "desc": "True to disable mouse tracking. This is only applied at config time. (defaults to false)",
      "memberOf": ""
    },
    {
      "name": "draggable",
      "type": "Boolean",
      "desc": "Convenience to initialize drag drop (defaults to false)",
      "memberOf": ""
    },
    {
      "name": "duration",
      "type": "Number",
      "desc": "Animation duration if animate = true (defaults to .35)",
      "memberOf": ""
    },
    {
      "name": "dynamic",
      "type": "Boolean",
      "desc": "True to resize the element while dragging instead of using a proxy (defaults to false)",
      "memberOf": ""
    },
    {
      "name": "easing",
      "type": "String",
      "desc": "Animation easing if animate = true (defaults to 'easingOutStrong')",
      "memberOf": ""
    },
    {
      "name": "enabled",
      "type": "Boolean",
      "desc": "False to disable resizing (defaults to true)",
      "memberOf": ""
    },
    {
      "name": "handles",
      "type": "String",
      "desc": "String consisting of the resize handles to display (defaults to undefined)",
      "memberOf": ""
    },
    {
      "name": "height",
      "type": "Number",
      "desc": "The height of the element in pixels (defaults to null)",
      "memberOf": ""
    },
    {
      "name": "heightIncrement",
      "type": "Number",
      "desc": "The increment to snap the height resize in pixels (dynamic must be true, defaults to 0)",
      "memberOf": ""
    },
    {
      "name": "maxHeight",
      "type": "Number",
      "desc": "The maximum height for the element (defaults to 10000)",
      "memberOf": ""
    },
    {
      "name": "maxWidth",
      "type": "Number",
      "desc": "The maximum width for the element (defaults to 10000)",
      "memberOf": ""
    },
    {
      "name": "minHeight",
      "type": "Number",
      "desc": "The minimum height for the element (defaults to 5)",
      "memberOf": ""
    },
    {
      "name": "minWidth",
      "type": "Number",
      "desc": "The minimum width for the element (defaults to 5)",
      "memberOf": ""
    },
    {
      "name": "minX",
      "type": "Number",
      "desc": "The minimum allowed page X for the element (only used for west resizing, defaults to 0)",
      "memberOf": ""
    },
    {
      "name": "minY",
      "type": "Number",
      "desc": "The minimum allowed page Y for the element (only used for north resizing, defaults to 0)",
      "memberOf": ""
    },
    {
      "name": "multiDirectional",
      "type": "Boolean",
      "desc": "<b>Deprecated</b>.  The old style of adding multi-direction resize handles, deprecated\nin favor of the handles config option (defaults to false)",
      "memberOf": ""
    },
    {
      "name": "pinned",
      "type": "Boolean",
      "desc": "True to ensure that the resize handles are always visible, false to display them only when the\nuser mouses over the resizable borders. This is only applied at config time. (defaults to false)",
      "memberOf": ""
    },
    {
      "name": "preserveRatio",
      "type": "Boolean",
      "desc": "True to preserve the original ratio between height and width during resize (defaults to false)",
      "memberOf": ""
    },
    {
      "name": "resizeChild",
      "type": "Boolean/String/Element",
      "desc": "True to resize the first child, or id/element to resize (defaults to false)",
      "memberOf": ""
    },
    {
      "name": "resizeRegion",
      "type": "Roo.lib.Region",
      "desc": "Constrain the resize to a particular region",
      "memberOf": ""
    },
    {
      "name": "transparent",
      "type": "Boolean",
      "desc": "True for transparent handles. This is only applied at config time. (defaults to false)",
      "memberOf": ""
    },
    {
      "name": "width",
      "type": "Number",
      "desc": "The width of the element in pixels (defaults to null)",
      "memberOf": ""
    },
    {
      "name": "widthIncrement",
      "type": "Number",
      "desc": "The increment to snap the width resize in pixels (dynamic must be true, defaults to 0)",
      "memberOf": ""
    },
    {
      "name": "wrap",
      "type": "Boolean",
      "desc": "True to wrap an element with a div if needed (required for textareas and images, defaults to false)",
      "memberOf": ""
    }
  ],
  "events": [
    {
      "name": "beforeresize",
      "sig": "function (_self, e)\n{\n\n}",
      "type": "function",
      "desc": "Fired before resize is allowed. Set enabled to false to cancel resize."
    },
    {
      "name": "resize",
      "sig": "function (_self, width, height, e)\n{\n\n}",
      "type": "function",
      "desc": "Fired after a resize."
    }
  ]
}