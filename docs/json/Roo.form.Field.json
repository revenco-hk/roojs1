{
  "props": [
    {
      "name": "autoCreate",
      "type": "String/Object",
      "desc": "A DomHelper element spec, or true for a default element spec (defaults to\n{tag: \"input\", type: \"text\", size: \"20\", autocomplete: \"off\"})",
      "memberOf": ""
    },
    {
      "name": "cls",
      "type": "String",
      "desc": "A CSS class to apply to the field's underlying element.",
      "memberOf": ""
    },
    {
      "name": "disabled",
      "type": "Boolean",
      "desc": "True to disable the field (defaults to false).",
      "memberOf": ""
    },
    {
      "name": "fieldClass",
      "type": "String",
      "desc": "The default CSS class for the field (defaults to \"x-form-field\")",
      "memberOf": ""
    },
    {
      "name": "fieldLabel",
      "type": "String",
      "desc": "Label to use when rendering a form.",
      "memberOf": ""
    },
    {
      "name": "focusClass",
      "type": "String",
      "desc": "The CSS class to use when the field receives focus (defaults to \"x-form-focus\")",
      "memberOf": ""
    },
    {
      "name": "inputType",
      "type": "String",
      "desc": "The type attribute for input fields -- e.g. radio, text, password (defaults to \"text\").",
      "memberOf": ""
    },
    {
      "name": "invalidClass",
      "type": "String",
      "desc": "The CSS class to use when marking a field invalid (defaults to \"x-form-invalid\")",
      "memberOf": ""
    },
    {
      "name": "invalidText",
      "type": "String",
      "desc": "The error text to use when marking a field invalid and no message is provided (defaults to \"The value in this field is invalid\")",
      "memberOf": ""
    },
    {
      "name": "msgFx",
      "type": "String",
      "desc": "<b>Experimental</b> The effect used when displaying a validation message under the field (defaults to 'normal').",
      "memberOf": ""
    },
    {
      "name": "msgTarget",
      "type": "String",
      "desc": "The location where error text should display.  Should be one of the following values (defaults to 'qtip'):\n<pre>\nValue         Description\n-----------   ----------------------------------------------------------------------\nqtip          Display a quick tip when the user hovers over the field\ntitle         Display a default browser title attribute popup\nunder         Add a block div beneath the field containing the error text\nside          Add an error icon to the right of the field with a popup on hover\n[element id]  Add the error text directly to the innerHTML of the specified element\n</pre>",
      "memberOf": ""
    },
    {
      "name": "name",
      "type": "String",
      "desc": "The field's HTML name attribute.",
      "memberOf": ""
    },
    {
      "name": "qtip",
      "type": "String",
      "desc": "Mouse over tip",
      "memberOf": ""
    },
    {
      "name": "readOnly",
      "type": "Boolean",
      "desc": "True to mark the field as readOnly in HTML (defaults to false) -- Note: this only sets the element's readOnly DOM attribute.",
      "memberOf": ""
    },
    {
      "name": "tabIndex",
      "type": "Number",
      "desc": "The tabIndex for this field. Note this only applies to fields that are rendered, not those which are built via applyTo (defaults to undefined).",
      "memberOf": ""
    },
    {
      "name": "validateOnBlur",
      "type": "Boolean",
      "desc": "Whether the field should validate when it loses focus (defaults to true).",
      "memberOf": ""
    },
    {
      "name": "validationDelay",
      "type": "Number",
      "desc": "The length of time in milliseconds after user input begins until validation is initiated (defaults to 250)",
      "memberOf": ""
    },
    {
      "name": "validationEvent",
      "type": "String/Boolean",
      "desc": "The event that should initiate field validation. Set to false to disable\n      automatic validation (defaults to \"keyup\").",
      "memberOf": ""
    },
    {
      "name": "value",
      "type": "Mixed",
      "desc": "A value to initialize this field with.",
      "memberOf": ""
    }
  ],
  "events": [
    {
      "name": "blur",
      "sig": "function (_self)\n{\n\n}",
      "type": "function",
      "desc": "Fires when this field loses input focus."
    },
    {
      "name": "change",
      "sig": "function (_self, newValue, oldValue)\n{\n\n}",
      "type": "function",
      "desc": "Fires just before the field blurs if the field value has changed."
    },
    {
      "name": "focus",
      "sig": "function (_self)\n{\n\n}",
      "type": "function",
      "desc": "Fires when this field receives input focus."
    },
    {
      "name": "invalid",
      "sig": "function (_self, msg)\n{\n\n}",
      "type": "function",
      "desc": "Fires after the field has been marked as invalid."
    },
    {
      "name": "specialkey",
      "sig": "function (_self, e)\n{\n\n}",
      "type": "function",
      "desc": "Fires when any key related to navigation (arrows, tab, enter, esc, etc.) is pressed.  You can check\n{@link Roo.EventObject#getKey} to determine which key was pressed."
    },
    {
      "name": "valid",
      "sig": "function (_self)\n{\n\n}",
      "type": "function",
      "desc": "Fires after the field has been validated with no errors."
    }
  ]
}