{
  "props": [
    {
      "name": "alignment",
      "type": "String",
      "desc": "The position to align to (see {@link Roo.Element#alignTo} for more details, defaults to \"c-c?\").",
      "memberOf": ""
    },
    {
      "name": "autosize",
      "type": "Boolean/String",
      "desc": "True for the editor to automatically adopt the size of the underlying field, \"width\" to adopt the width only,\nor \"height\" to adopt the height only (defaults to false)",
      "memberOf": ""
    },
    {
      "name": "cancelOnEsc",
      "type": "Boolean",
      "desc": "True to cancel the edit when the escape key is pressed (defaults to false)",
      "memberOf": ""
    },
    {
      "name": "completeOnEnter",
      "type": "Boolean",
      "desc": "True to complete the edit when the enter key is pressed (defaults to false)",
      "memberOf": ""
    },
    {
      "name": "constrain",
      "type": "Boolean",
      "desc": "True to constrain the editor to the viewport",
      "memberOf": ""
    },
    {
      "name": "hideEl",
      "type": "Boolean",
      "desc": "False to keep the bound element visible while the editor is displayed (defaults to true)",
      "memberOf": ""
    },
    {
      "name": "ignoreNoChange",
      "type": "Boolean",
      "desc": "True to skip the the edit completion process (no save, no events fired) if the user completes an edit and\nthe value has not changed (defaults to false).  Applies only to string values - edits for other data types\nwill never be ignored.",
      "memberOf": ""
    },
    {
      "name": "revertInvalid",
      "type": "Boolean",
      "desc": "True to automatically revert the field value and cancel the edit when the user completes an edit and the field\nvalidation fails (defaults to true)",
      "memberOf": ""
    },
    {
      "name": "shadow",
      "type": "Boolean/String",
      "desc": "\"sides\" for sides/bottom only, \"frame\" for 4-way shadow, and \"drop\"\nfor bottom-right shadow (defaults to \"frame\")",
      "memberOf": ""
    },
    {
      "name": "updateEl",
      "type": "Boolean",
      "desc": "True to update the innerHTML of the bound element when the update completes (defaults to false)",
      "memberOf": ""
    },
    {
      "name": "value",
      "type": "Mixed",
      "desc": "The data value of the underlying field (defaults to \"\")",
      "memberOf": ""
    }
  ],
  "events": [
    {
      "name": "beforecomplete",
      "sig": "function (_self, value, startValue)\n{\n\n}",
      "type": "function",
      "desc": "Fires after a change has been made to the field, but before the change is reflected in the underlying\nfield.  Saving the change to the field can be canceled by returning false from the handler of this event.\nNote that if the value has not changed and ignoreNoChange = true, the editing will still end but this\nevent will not fire since no edit actually occurred."
    },
    {
      "name": "beforestartedit",
      "sig": "function (_self, boundEl, value)\n{\n\n}",
      "type": "function",
      "desc": "Fires when editing is initiated, but before the value changes.  Editing can be canceled by returning\nfalse from the handler of this event."
    },
    {
      "name": "complete",
      "sig": "function (_self, value, startValue)\n{\n\n}",
      "type": "function",
      "desc": "Fires after editing is complete and any changed value has been written to the underlying field."
    },
    {
      "name": "specialkey",
      "sig": "function (_self, e)\n{\n\n}",
      "type": "function",
      "desc": "Fires when any key related to navigation (arrows, tab, enter, esc, etc.) is pressed.  You can check\n{@link Roo.EventObject#getKey} to determine which key was pressed."
    },
    {
      "name": "startedit",
      "sig": "function (boundEl, value)\n{\n\n}",
      "type": "function",
      "desc": "Fires when this editor is displayed"
    }
  ]
}