{
  "props": [
    {
      "name": "allowBlank",
      "type": "Boolean",
      "desc": "False to validate that the value length > 0 (defaults to true)",
      "memberOf": ""
    },
    {
      "name": "blankText",
      "type": "String",
      "desc": "Error text to display if the allow blank validation fails (defaults to \"This field is required\")",
      "memberOf": ""
    },
    {
      "name": "disableKeyFilter",
      "type": "Boolean",
      "desc": "True to disable input keystroke filtering (defaults to false)",
      "memberOf": ""
    },
    {
      "name": "emptyClass",
      "type": "String",
      "desc": "The CSS class to apply to an empty field to style the {@link #emptyText} (defaults to\n'x-form-empty-field').  This class is automatically added and removed as needed depending on the current field value.",
      "memberOf": ""
    },
    {
      "name": "emptyText",
      "type": "String",
      "desc": "The default text to display in an empty field (defaults to null).",
      "memberOf": ""
    },
    {
      "name": "grow",
      "type": "Boolean",
      "desc": "True if this field should automatically grow and shrink to its content",
      "memberOf": ""
    },
    {
      "name": "growMax",
      "type": "Number",
      "desc": "The maximum width to allow when grow = true (defaults to 800)",
      "memberOf": ""
    },
    {
      "name": "growMin",
      "type": "Number",
      "desc": "The minimum width to allow when grow = true (defaults to 30)",
      "memberOf": ""
    },
    {
      "name": "maskRe",
      "type": "String",
      "desc": "An input mask regular expression that will be used to filter keystrokes that don't match (defaults to null)",
      "memberOf": ""
    },
    {
      "name": "maxLength",
      "type": "Number",
      "desc": "Maximum input field length allowed (defaults to Number.MAX_VALUE)",
      "memberOf": ""
    },
    {
      "name": "maxLengthText",
      "type": "String",
      "desc": "Error text to display if the maximum length validation fails (defaults to \"The maximum length for this field is {maxLength}\")",
      "memberOf": ""
    },
    {
      "name": "minLength",
      "type": "Number",
      "desc": "Minimum input field length required (defaults to 0)",
      "memberOf": ""
    },
    {
      "name": "minLengthText",
      "type": "String",
      "desc": "Error text to display if the minimum length validation fails (defaults to \"The minimum length for this field is {minLength}\")",
      "memberOf": ""
    },
    {
      "name": "regex",
      "type": "RegExp",
      "desc": "A JavaScript RegExp object to be tested against the field value during validation (defaults to null).\nIf available, this regex will be evaluated only after the basic validators all return true, and will be passed the\ncurrent field value.  If the test fails, the field will be marked invalid using {@link #regexText}.",
      "memberOf": ""
    },
    {
      "name": "regexText",
      "type": "String",
      "desc": "The error text to display if {@link #regex} is used and the test fails during validation (defaults to \"\")",
      "memberOf": ""
    },
    {
      "name": "selectOnFocus",
      "type": "Boolean",
      "desc": "True to automatically select any existing field text when the field receives input focus (defaults to false)",
      "memberOf": ""
    },
    {
      "name": "validator",
      "type": "Function",
      "desc": "A custom validation function to be called during field validation (defaults to null).\nIf available, this function will be called only after the basic validators all return true, and will be passed the\ncurrent field value and expected to return boolean true if the value is valid or a string error message if invalid.",
      "memberOf": ""
    },
    {
      "name": "vtype",
      "type": "String",
      "desc": "A validation type name as defined in {@link Roo.form.VTypes} (defaults to null)",
      "memberOf": ""
    }
  ],
  "events": [
    {
      "name": "autosize",
      "sig": "function (_self, width)\n{\n\n}",
      "type": "function",
      "desc": "Fires when the autosize function is triggered.  The field may or may not have actually changed size\naccording to the default logic, but this event provides a hook for the developer to apply additional\nlogic at runtime to resize the field if needed."
    }
  ]
}