{
  "*object": "SymbolSet",
  "_index": {
    "Roo.DomQuery": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "CONSTRUCTOR",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DomQuery.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@class Roo.DomQuery\n@desc Provides high performance selector/xpath processing by compiling queries into reusable functions. New pseudo classes and matchers can be plugged. It works on HTML and XML documents (if a content node is passed in).\n<p>\nDomQuery supports most of the <a href=\"http://www.w3.org/TR/2005/WD-css3-selectors-20051215/\">CSS3 selectors spec</a>, along with some custom selectors and basic XPath.</p>\n\n<p>\nAll selectors, attribute filters and pseudos below can be combined infinitely in any order. For example \"div.foo:nth-child(odd)[@foo=bar].bar:first\" would be a perfectly valid selector. Node filters are processed in the order in which they appear, which allows you to optimize your queries for your document structure.\n</p>\n<h4>Element Selectors:</h4>\n<ul class=\"list\">\n    <li> <b>*</b> any element</li>\n    <li> <b>E</b> an element with the tag E</li>\n    <li> <b>E F</b> All descendent elements of E that have the tag F</li>\n    <li> <b>E > F</b> or <b>E/F</b> all direct children elements of E that have the tag F</li>\n    <li> <b>E + F</b> all elements with the tag F that are immediately preceded by an element with the tag E</li>\n    <li> <b>E ~ F</b> all elements with the tag F that are preceded by a sibling element with the tag E</li>\n</ul>\n<h4>Attribute Selectors:</h4>\n<p>The use of @ and quotes are optional. For example, div[@foo='bar'] is also a valid attribute selector.</p>\n<ul class=\"list\">\n    <li> <b>E[foo]</b> has an attribute \"foo\"</li>\n    <li> <b>E[foo=bar]</b> has an attribute \"foo\" that equals \"bar\"</li>\n    <li> <b>E[foo^=bar]</b> has an attribute \"foo\" that starts with \"bar\"</li>\n    <li> <b>E[foo$=bar]</b> has an attribute \"foo\" that ends with \"bar\"</li>\n    <li> <b>E[foo*=bar]</b> has an attribute \"foo\" that contains the substring \"bar\"</li>\n    <li> <b>E[foo%=2]</b> has an attribute \"foo\" that is evenly divisible by 2</li>\n    <li> <b>E[foo!=bar]</b> has an attribute \"foo\" that does not equal \"bar\"</li>\n</ul>\n<h4>Pseudo Classes:</h4>\n<ul class=\"list\">\n    <li> <b>E:first-child</b> E is the first child of its parent</li>\n    <li> <b>E:last-child</b> E is the last child of its parent</li>\n    <li> <b>E:nth-child(<i>n</i>)</b> E is the <i>n</i>th child of its parent (1 based as per the spec)</li>\n    <li> <b>E:nth-child(odd)</b> E is an odd child of its parent</li>\n    <li> <b>E:nth-child(even)</b> E is an even child of its parent</li>\n    <li> <b>E:only-child</b> E is the only child of its parent</li>\n    <li> <b>E:checked</b> E is an element that is has a checked attribute that is true (e.g. a radio or checkbox) </li>\n    <li> <b>E:first</b> the first E in the resultset</li>\n    <li> <b>E:last</b> the last E in the resultset</li>\n    <li> <b>E:nth(<i>n</i>)</b> the <i>n</i>th E in the resultset (1 based)</li>\n    <li> <b>E:odd</b> shortcut for :nth-child(odd)</li>\n    <li> <b>E:even</b> shortcut for :nth-child(even)</li>\n    <li> <b>E:contains(foo)</b> E's innerHTML contains the substring \"foo\"</li>\n    <li> <b>E:nodeValue(foo)</b> E contains a textNode with a nodeValue that equals \"foo\"</li>\n    <li> <b>E:not(S)</b> an E element that does not match simple selector S</li>\n    <li> <b>E:has(S)</b> an E element that has a descendent that matches simple selector S</li>\n    <li> <b>E:next(S)</b> an E element whose next sibling matches simple selector S</li>\n    <li> <b>E:prev(S)</b> an E element whose previous sibling matches simple selector S</li>\n</ul>\n<h4>CSS Value Selectors:</h4>\n<ul class=\"list\">\n    <li> <b>E{display=none}</b> css value \"display\" that equals \"none\"</li>\n    <li> <b>E{display^=none}</b> css value \"display\" that starts with \"none\"</li>\n    <li> <b>E{display$=none}</b> css value \"display\" that ends with \"none\"</li>\n    <li> <b>E{display*=none}</b> css value \"display\" that contains the substring \"none\"</li>\n    <li> <b>E{display%=2}</b> css value \"display\" that is evenly divisible by 2</li>\n    <li> <b>E{display!=none}</b> css value \"display\" that does not equal \"none\"</li>\n</ul>\n@singleton\n \n",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "class",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Roo.DomQuery"
          },
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Provides high performance selector/xpath processing by compiling queries into reusable functions. New pseudo classes and matchers can be plugged. It works on HTML and XML documents (if a content node is passed in).\n<p>\nDomQuery supports most of the <a href=\"http://www.w3.org/TR/2005/WD-css3-selectors-20051215/\">CSS3 selectors spec</a>, along with some custom selectors and basic XPath.</p>\n\n<p>\nAll selectors, attribute filters and pseudos below can be combined infinitely in any order. For example \"div.foo:nth-child(odd)[@foo=bar].bar:first\" would be a perfectly valid selector. Node filters are processed in the order in which they appear, which allows you to optimize your queries for your document structure.\n</p>\n<h4>Element Selectors:</h4>\n<ul class=\"list\">\n    <li> <b>*</b> any element</li>\n    <li> <b>E</b> an element with the tag E</li>\n    <li> <b>E F</b> All descendent elements of E that have the tag F</li>\n    <li> <b>E > F</b> or <b>E/F</b> all direct children elements of E that have the tag F</li>\n    <li> <b>E + F</b> all elements with the tag F that are immediately preceded by an element with the tag E</li>\n    <li> <b>E ~ F</b> all elements with the tag F that are preceded by a sibling element with the tag E</li>\n</ul>\n<h4>Attribute Selectors:</h4>\n<p>The use of @ and quotes are optional. For example, div[@foo='bar'] is also a valid attribute selector.</p>\n<ul class=\"list\">\n    <li> <b>E[foo]</b> has an attribute \"foo\"</li>\n    <li> <b>E[foo=bar]</b> has an attribute \"foo\" that equals \"bar\"</li>\n    <li> <b>E[foo^=bar]</b> has an attribute \"foo\" that starts with \"bar\"</li>\n    <li> <b>E[foo$=bar]</b> has an attribute \"foo\" that ends with \"bar\"</li>\n    <li> <b>E[foo*=bar]</b> has an attribute \"foo\" that contains the substring \"bar\"</li>\n    <li> <b>E[foo%=2]</b> has an attribute \"foo\" that is evenly divisible by 2</li>\n    <li> <b>E[foo!=bar]</b> has an attribute \"foo\" that does not equal \"bar\"</li>\n</ul>\n<h4>Pseudo Classes:</h4>\n<ul class=\"list\">\n    <li> <b>E:first-child</b> E is the first child of its parent</li>\n    <li> <b>E:last-child</b> E is the last child of its parent</li>\n    <li> <b>E:nth-child(<i>n</i>)</b> E is the <i>n</i>th child of its parent (1 based as per the spec)</li>\n    <li> <b>E:nth-child(odd)</b> E is an odd child of its parent</li>\n    <li> <b>E:nth-child(even)</b> E is an even child of its parent</li>\n    <li> <b>E:only-child</b> E is the only child of its parent</li>\n    <li> <b>E:checked</b> E is an element that is has a checked attribute that is true (e.g. a radio or checkbox) </li>\n    <li> <b>E:first</b> the first E in the resultset</li>\n    <li> <b>E:last</b> the last E in the resultset</li>\n    <li> <b>E:nth(<i>n</i>)</b> the <i>n</i>th E in the resultset (1 based)</li>\n    <li> <b>E:odd</b> shortcut for :nth-child(odd)</li>\n    <li> <b>E:even</b> shortcut for :nth-child(even)</li>\n    <li> <b>E:contains(foo)</b> E's innerHTML contains the substring \"foo\"</li>\n    <li> <b>E:nodeValue(foo)</b> E contains a textNode with a nodeValue that equals \"foo\"</li>\n    <li> <b>E:not(S)</b> an E element that does not match simple selector S</li>\n    <li> <b>E:has(S)</b> an E element that has a descendent that matches simple selector S</li>\n    <li> <b>E:next(S)</b> an E element whose next sibling matches simple selector S</li>\n    <li> <b>E:prev(S)</b> an E element whose previous sibling matches simple selector S</li>\n</ul>\n<h4>CSS Value Selectors:</h4>\n<ul class=\"list\">\n    <li> <b>E{display=none}</b> css value \"display\" that equals \"none\"</li>\n    <li> <b>E{display^=none}</b> css value \"display\" that starts with \"none\"</li>\n    <li> <b>E{display$=none}</b> css value \"display\" that ends with \"none\"</li>\n    <li> <b>E{display*=none}</b> css value \"display\" that contains the substring \"none\"</li>\n    <li> <b>E{display%=2}</b> css value \"display\" that is evenly divisible by 2</li>\n    <li> <b>E{display!=none}</b> css value \"display\" that does not equal \"none\"</li>\n</ul>"
          },
          {
            "*object": "DocTag",
            "title": "singleton",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Roo.DomQuery",
      "name": "Roo.DomQuery",
      "alias": "Roo.DomQuery",
      "desc": "Provides high performance selector/xpath processing by compiling queries into reusable functions. New pseudo classes and matchers can be plugged. It works on HTML and XML documents (if a content node is passed in).\n<p>\nDomQuery supports most of the <a href=\"http://www.w3.org/TR/2005/WD-css3-selectors-20051215/\">CSS3 selectors spec</a>, along with some custom selectors and basic XPath.</p>\n\n<p>\nAll selectors, attribute filters and pseudos below can be combined infinitely in any order. For example \"div.foo:nth-child(odd)[@foo=bar].bar:first\" would be a perfectly valid selector. Node filters are processed in the order in which they appear, which allows you to optimize your queries for your document structure.\n</p>\n<h4>Element Selectors:</h4>\n<ul class=\"list\">\n    <li> <b>*</b> any element</li>\n    <li> <b>E</b> an element with the tag E</li>\n    <li> <b>E F</b> All descendent elements of E that have the tag F</li>\n    <li> <b>E > F</b> or <b>E/F</b> all direct children elements of E that have the tag F</li>\n    <li> <b>E + F</b> all elements with the tag F that are immediately preceded by an element with the tag E</li>\n    <li> <b>E ~ F</b> all elements with the tag F that are preceded by a sibling element with the tag E</li>\n</ul>\n<h4>Attribute Selectors:</h4>\n<p>The use of @ and quotes are optional. For example, div[@foo='bar'] is also a valid attribute selector.</p>\n<ul class=\"list\">\n    <li> <b>E[foo]</b> has an attribute \"foo\"</li>\n    <li> <b>E[foo=bar]</b> has an attribute \"foo\" that equals \"bar\"</li>\n    <li> <b>E[foo^=bar]</b> has an attribute \"foo\" that starts with \"bar\"</li>\n    <li> <b>E[foo$=bar]</b> has an attribute \"foo\" that ends with \"bar\"</li>\n    <li> <b>E[foo*=bar]</b> has an attribute \"foo\" that contains the substring \"bar\"</li>\n    <li> <b>E[foo%=2]</b> has an attribute \"foo\" that is evenly divisible by 2</li>\n    <li> <b>E[foo!=bar]</b> has an attribute \"foo\" that does not equal \"bar\"</li>\n</ul>\n<h4>Pseudo Classes:</h4>\n<ul class=\"list\">\n    <li> <b>E:first-child</b> E is the first child of its parent</li>\n    <li> <b>E:last-child</b> E is the last child of its parent</li>\n    <li> <b>E:nth-child(<i>n</i>)</b> E is the <i>n</i>th child of its parent (1 based as per the spec)</li>\n    <li> <b>E:nth-child(odd)</b> E is an odd child of its parent</li>\n    <li> <b>E:nth-child(even)</b> E is an even child of its parent</li>\n    <li> <b>E:only-child</b> E is the only child of its parent</li>\n    <li> <b>E:checked</b> E is an element that is has a checked attribute that is true (e.g. a radio or checkbox) </li>\n    <li> <b>E:first</b> the first E in the resultset</li>\n    <li> <b>E:last</b> the last E in the resultset</li>\n    <li> <b>E:nth(<i>n</i>)</b> the <i>n</i>th E in the resultset (1 based)</li>\n    <li> <b>E:odd</b> shortcut for :nth-child(odd)</li>\n    <li> <b>E:even</b> shortcut for :nth-child(even)</li>\n    <li> <b>E:contains(foo)</b> E's innerHTML contains the substring \"foo\"</li>\n    <li> <b>E:nodeValue(foo)</b> E contains a textNode with a nodeValue that equals \"foo\"</li>\n    <li> <b>E:not(S)</b> an E element that does not match simple selector S</li>\n    <li> <b>E:has(S)</b> an E element that has a descendent that matches simple selector S</li>\n    <li> <b>E:next(S)</b> an E element whose next sibling matches simple selector S</li>\n    <li> <b>E:prev(S)</b> an E element whose previous sibling matches simple selector S</li>\n</ul>\n<h4>CSS Value Selectors:</h4>\n<ul class=\"list\">\n    <li> <b>E{display=none}</b> css value \"display\" that equals \"none\"</li>\n    <li> <b>E{display^=none}</b> css value \"display\" that starts with \"none\"</li>\n    <li> <b>E{display$=none}</b> css value \"display\" that ends with \"none\"</li>\n    <li> <b>E{display*=none}</b> css value \"display\" that contains the substring \"none\"</li>\n    <li> <b>E{display%=2}</b> css value \"display\" that is evenly divisible by 2</li>\n    <li> <b>E{display!=none}</b> css value \"display\" that does not equal \"none\"</li>\n</ul>",
      "classDesc": "Roo.DomQuery",
      "isStatic": true,
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.DomQuery#batch": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DomQuery.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": false,
        "src": "\n@desc  eval:var:batch ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "eval:var:batch"
          }
        ]
      },
      "_name": "Roo.DomQuery#batch",
      "name": "Roo.DomQuery#batch",
      "alias": "Roo.DomQuery#batch",
      "desc": "eval:var:batch",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.DomQuery#compile": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "selector",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The selector/xpath query"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "type",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) Either \"select\" (the default) or \"simple\" for a simple selector match"
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "selector",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The selector/xpath query"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "type",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) Either \"select\" (the default) or \"simple\" for a simple selector match"
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Function",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DomQuery.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Compiles a selector/xpath query into a reusable function. The returned function\ntakes one parameter \"root\" (optional), which is the context node from where the query should start.\n@param {String} selector The selector/xpath query\n@param {String} type (optional) Either \"select\" (the default) or \"simple\" for a simple selector match\n@return {Function}\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Compiles a selector/xpath query into a reusable function. The returned function\ntakes one parameter \"root\" (optional), which is the context node from where the query should start."
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "selector",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The selector/xpath query"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "type",
            "isOptional": false,
            "defaultValue": "",
            "desc": "(optional) Either \"select\" (the default) or \"simple\" for a simple selector match"
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Function",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Roo.DomQuery#compile",
      "name": "Roo.DomQuery#compile",
      "alias": "Roo.DomQuery#compile",
      "desc": "Compiles a selector/xpath query into a reusable function. The returned function\ntakes one parameter \"root\" (optional), which is the context node from where the query should start.",
      "type": "Function",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.DomQuery#select": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "selector",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The selector/xpath query (can be a comma separated list of selectors)"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Node",
          "name": "root",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) The start of the query (defaults to document)."
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "selector",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The selector/xpath query (can be a comma separated list of selectors)"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Node",
          "name": "root",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) The start of the query (defaults to document)."
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Array",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DomQuery.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Selects a group of elements.\n@param {String} selector The selector/xpath query (can be a comma separated list of selectors)\n@param {Node} root (optional) The start of the query (defaults to document).\n@return {Array}\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Selects a group of elements."
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "selector",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The selector/xpath query (can be a comma separated list of selectors)"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Node",
            "name": "root",
            "isOptional": false,
            "defaultValue": "",
            "desc": "(optional) The start of the query (defaults to document)."
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Array",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Roo.DomQuery#select",
      "name": "Roo.DomQuery#select",
      "alias": "Roo.DomQuery#select",
      "desc": "Selects a group of elements.",
      "type": "Array",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.DomQuery#selectNode": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "selector",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The selector/xpath query"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Node",
          "name": "root",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) The start of the query (defaults to document)."
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "selector",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The selector/xpath query"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Node",
          "name": "root",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) The start of the query (defaults to document)."
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Element",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DomQuery.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Selects a single element.\n@param {String} selector The selector/xpath query\n@param {Node} root (optional) The start of the query (defaults to document).\n@return {Element}\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Selects a single element."
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "selector",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The selector/xpath query"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Node",
            "name": "root",
            "isOptional": false,
            "defaultValue": "",
            "desc": "(optional) The start of the query (defaults to document)."
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Element",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Roo.DomQuery#selectNode",
      "name": "Roo.DomQuery#selectNode",
      "alias": "Roo.DomQuery#selectNode",
      "desc": "Selects a single element.",
      "type": "Element",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.DomQuery#selectValue": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "selector",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The selector/xpath query"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Node",
          "name": "root",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) The start of the query (defaults to document)."
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "defaultValue",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "selector",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The selector/xpath query"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Node",
          "name": "root",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) The start of the query (defaults to document)."
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "defaultValue",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DomQuery.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Selects the value of a node, optionally replacing null with the defaultValue.\n@param {String} selector The selector/xpath query\n@param {Node} root (optional) The start of the query (defaults to document).\n@param {String} defaultValue\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Selects the value of a node, optionally replacing null with the defaultValue."
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "selector",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The selector/xpath query"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Node",
            "name": "root",
            "isOptional": false,
            "defaultValue": "",
            "desc": "(optional) The start of the query (defaults to document)."
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "defaultValue",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Roo.DomQuery#selectValue",
      "name": "Roo.DomQuery#selectValue",
      "alias": "Roo.DomQuery#selectValue",
      "desc": "Selects the value of a node, optionally replacing null with the defaultValue.",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.DomQuery#selectNumber": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "selector",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The selector/xpath query"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Node",
          "name": "root",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) The start of the query (defaults to document)."
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Number",
          "name": "defaultValue",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "selector",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The selector/xpath query"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Node",
          "name": "root",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) The start of the query (defaults to document)."
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Number",
          "name": "defaultValue",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Number",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DomQuery.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Selects the value of a node, parsing integers and floats.\n@param {String} selector The selector/xpath query\n@param {Node} root (optional) The start of the query (defaults to document).\n@param {Number} defaultValue\n@return {Number}\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Selects the value of a node, parsing integers and floats."
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "selector",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The selector/xpath query"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Node",
            "name": "root",
            "isOptional": false,
            "defaultValue": "",
            "desc": "(optional) The start of the query (defaults to document)."
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Number",
            "name": "defaultValue",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Number",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Roo.DomQuery#selectNumber",
      "name": "Roo.DomQuery#selectNumber",
      "alias": "Roo.DomQuery#selectNumber",
      "desc": "Selects the value of a node, parsing integers and floats.",
      "type": "Number",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.DomQuery#is": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String/HTMLElement/Array",
          "name": "el",
          "isOptional": false,
          "defaultValue": "",
          "desc": "An element id, element or array of elements"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "selector",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The simple selector to test"
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String/HTMLElement/Array",
          "name": "el",
          "isOptional": false,
          "defaultValue": "",
          "desc": "An element id, element or array of elements"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "selector",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The simple selector to test"
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Boolean",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DomQuery.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Returns true if the passed element(s) match the passed simple selector (e.g. div.some-class or span:first-child)\n@param {String/HTMLElement/Array} el An element id, element or array of elements\n@param {String} selector The simple selector to test\n@return {Boolean}\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Returns true if the passed element(s) match the passed simple selector (e.g. div.some-class or span:first-child)"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String/HTMLElement/Array",
            "name": "el",
            "isOptional": false,
            "defaultValue": "",
            "desc": "An element id, element or array of elements"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "selector",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The simple selector to test"
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Boolean",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Roo.DomQuery#is",
      "name": "Roo.DomQuery#is",
      "alias": "Roo.DomQuery#is",
      "desc": "Returns true if the passed element(s) match the passed simple selector (e.g. div.some-class or span:first-child)",
      "type": "Boolean",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.DomQuery#filter": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Array",
          "name": "el",
          "isOptional": false,
          "defaultValue": "",
          "desc": "An array of elements to filter"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "selector",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The simple selector to test"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Boolean",
          "name": "nonMatches",
          "isOptional": false,
          "defaultValue": "",
          "desc": "If true, it returns the elements that DON'T match\nthe selector instead of the ones that match"
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Array",
          "name": "el",
          "isOptional": false,
          "defaultValue": "",
          "desc": "An array of elements to filter"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "selector",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The simple selector to test"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Boolean",
          "name": "nonMatches",
          "isOptional": false,
          "defaultValue": "",
          "desc": "If true, it returns the elements that DON'T match\nthe selector instead of the ones that match"
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Array",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DomQuery.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Filters an array of elements to only include matches of a simple selector (e.g. div.some-class or span:first-child)\n@param {Array} el An array of elements to filter\n@param {String} selector The simple selector to test\n@param {Boolean} nonMatches If true, it returns the elements that DON'T match\nthe selector instead of the ones that match\n@return {Array}\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Filters an array of elements to only include matches of a simple selector (e.g. div.some-class or span:first-child)"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Array",
            "name": "el",
            "isOptional": false,
            "defaultValue": "",
            "desc": "An array of elements to filter"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "selector",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The simple selector to test"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Boolean",
            "name": "nonMatches",
            "isOptional": false,
            "defaultValue": "",
            "desc": "If true, it returns the elements that DON'T match\nthe selector instead of the ones that match"
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Array",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Roo.DomQuery#filter",
      "name": "Roo.DomQuery#filter",
      "alias": "Roo.DomQuery#filter",
      "desc": "Filters an array of elements to only include matches of a simple selector (e.g. div.some-class or span:first-child)",
      "type": "Array",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.DomQuery#matchers": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DomQuery.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": false,
        "src": "\n@desc Collection of matching regular expressions and code snippets.\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Collection of matching regular expressions and code snippets."
          }
        ]
      },
      "_name": "Roo.DomQuery#matchers",
      "name": "Roo.DomQuery#matchers",
      "alias": "Roo.DomQuery#matchers",
      "desc": "Collection of matching regular expressions and code snippets.",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.DomQuery#operators": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DomQuery.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": false,
        "src": "\n@desc Collection of operator comparison functions. The default operators are =, !=, ^=, $=, *=, %=, |= and ~=.\nNew operators can be added as long as the match the format <i>c</i>= where <i>c</i> is any character other than space, &gt; &lt;.\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Collection of operator comparison functions. The default operators are =, !=, ^=, $=, *=, %=, |= and ~=.\nNew operators can be added as long as the match the format <i>c</i>= where <i>c</i> is any character other than space, &gt; &lt;."
          }
        ]
      },
      "_name": "Roo.DomQuery#operators",
      "name": "Roo.DomQuery#operators",
      "alias": "Roo.DomQuery#operators",
      "desc": "Collection of operator comparison functions. The default operators are =, !=, ^=, $=, *=, %=, |= and ~=.\nNew operators can be added as long as the match the format <i>c</i>= where <i>c</i> is any character other than space, &gt; &lt;.",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.DomQuery#pseudos": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DomQuery.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": false,
        "src": "\n@desc Collection of \"pseudo class\" processors. Each processor is passed the current nodeset (array)\nand the argument (if any) supplied in the selector.\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Collection of \"pseudo class\" processors. Each processor is passed the current nodeset (array)\nand the argument (if any) supplied in the selector."
          }
        ]
      },
      "_name": "Roo.DomQuery#pseudos",
      "name": "Roo.DomQuery#pseudos",
      "alias": "Roo.DomQuery#pseudos",
      "desc": "Collection of \"pseudo class\" processors. Each processor is passed the current nodeset (array)\nand the argument (if any) supplied in the selector.",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.query": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "path",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The selector/xpath query"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Node",
          "name": "root",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) The start of the query (defaults to document)."
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "path",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The selector/xpath query"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Node",
          "name": "root",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) The start of the query (defaults to document)."
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Array",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DomQuery.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Selects an array of DOM nodes by CSS/XPath selector. Shorthand of {@link Roo.DomQuery#select}\n@param {String} path The selector/xpath query\n@param {Node} root (optional) The start of the query (defaults to document).\n@return {Array}\n@member Roo\n@method query\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Selects an array of DOM nodes by CSS/XPath selector. Shorthand of {@link Roo.DomQuery#select}"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "path",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The selector/xpath query"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Node",
            "name": "root",
            "isOptional": false,
            "defaultValue": "",
            "desc": "(optional) The start of the query (defaults to document)."
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Array",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "member",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Roo"
          },
          {
            "*object": "DocTag",
            "title": "method",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "query"
          }
        ]
      },
      "_name": "Roo.query",
      "name": "Roo.query",
      "alias": "Roo.query",
      "desc": "Selects an array of DOM nodes by CSS/XPath selector. Shorthand of {@link Roo.DomQuery#select}",
      "type": "Array",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    }
  }
}