{
  "*object": "SymbolSet",
  "_index": {
    "Roo": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "CONSTRUCTOR",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@class Roo\n@desc Roo core utilities and functions.\n@singleton\n \n",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "class",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Roo"
          },
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Roo core utilities and functions."
          },
          {
            "*object": "DocTag",
            "title": "singleton",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Roo",
      "name": "Roo",
      "alias": "Roo",
      "desc": "Roo core utilities and functions.",
      "classDesc": "Roo",
      "isStatic": true,
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.apply": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "obj",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The receiver of the properties"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "config",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The source of the properties"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "defaults",
          "isOptional": false,
          "defaultValue": "",
          "desc": "A different object that will also be applied for default values"
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "obj",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The receiver of the properties"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "config",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The source of the properties"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "defaults",
          "isOptional": false,
          "defaultValue": "",
          "desc": "A different object that will also be applied for default values"
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Object",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "returns obj"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Copies all the properties of config to obj.\n@param {Object} obj The receiver of the properties\n@param {Object} config The source of the properties\n@param {Object} defaults A different object that will also be applied for default values\n@return {Object} returns obj\n@member Roo apply\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Copies all the properties of config to obj."
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Object",
            "name": "obj",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The receiver of the properties"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Object",
            "name": "config",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The source of the properties"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Object",
            "name": "defaults",
            "isOptional": false,
            "defaultValue": "",
            "desc": "A different object that will also be applied for default values"
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Object",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "returns obj"
          },
          {
            "*object": "DocTag",
            "title": "member",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Roo apply"
          }
        ]
      },
      "_name": "Roo.apply",
      "name": "Roo.apply",
      "alias": "Roo.apply",
      "desc": "Copies all the properties of config to obj.",
      "type": "Object",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.isStrict": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc True if the browser is in strict mode\n\n@type Boolean\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "True if the browser is in strict mode"
          },
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Boolean"
          }
        ]
      },
      "_name": "Roo.isStrict",
      "name": "Roo.isStrict",
      "alias": "Roo.isStrict",
      "desc": "True if the browser is in strict mode",
      "type": "Boolean",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.isSecure": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc True if the page is running over SSL\n\n@type Boolean\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "True if the page is running over SSL"
          },
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Boolean"
          }
        ]
      },
      "_name": "Roo.isSecure",
      "name": "Roo.isSecure",
      "alias": "Roo.isSecure",
      "desc": "True if the page is running over SSL",
      "type": "Boolean",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.isReady": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc True when the document is fully initialized and ready for action\n\n@type Boolean\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "True when the document is fully initialized and ready for action"
          },
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Boolean"
          }
        ]
      },
      "_name": "Roo.isReady",
      "name": "Roo.isReady",
      "alias": "Roo.isReady",
      "desc": "True when the document is fully initialized and ready for action",
      "type": "Boolean",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.enableGarbageCollector": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc True to automatically uncache orphaned Roo.Elements periodically (defaults to true)\n\n@type Boolean\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "True to automatically uncache orphaned Roo.Elements periodically (defaults to true)"
          },
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Boolean"
          }
        ]
      },
      "_name": "Roo.enableGarbageCollector",
      "name": "Roo.enableGarbageCollector",
      "alias": "Roo.enableGarbageCollector",
      "desc": "True to automatically uncache orphaned Roo.Elements periodically (defaults to true)",
      "type": "Boolean",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.enableListenerCollection": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc True to automatically purge event listeners after uncaching an element (defaults to false).\nNote: this only happens if enableGarbageCollector is true.\n\n@type Boolean\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "True to automatically purge event listeners after uncaching an element (defaults to false).\nNote: this only happens if enableGarbageCollector is true."
          },
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Boolean"
          }
        ]
      },
      "_name": "Roo.enableListenerCollection",
      "name": "Roo.enableListenerCollection",
      "alias": "Roo.enableListenerCollection",
      "desc": "True to automatically purge event listeners after uncaching an element (defaults to false).\nNote: this only happens if enableGarbageCollector is true.",
      "type": "Boolean",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.SSL_SECURE_URL": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc URL to a blank file used by Roo when in secure mode for iframe src and onReady src to prevent\nthe IE insecure content warning (defaults to javascript:false).\n\n@type String\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "URL to a blank file used by Roo when in secure mode for iframe src and onReady src to prevent\nthe IE insecure content warning (defaults to javascript:false)."
          },
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "String"
          }
        ]
      },
      "_name": "Roo.SSL_SECURE_URL",
      "name": "Roo.SSL_SECURE_URL",
      "alias": "Roo.SSL_SECURE_URL",
      "desc": "URL to a blank file used by Roo when in secure mode for iframe src and onReady src to prevent\nthe IE insecure content warning (defaults to javascript:false).",
      "type": "String",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.BLANK_IMAGE_URL": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc URL to a 1x1 transparent gif image used by Roo to create inline icons with CSS background images. (Defaults to\n\"http://Roojs.com/s.gif\" and you should change this to a URL on your server).\n\n@type String\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "URL to a 1x1 transparent gif image used by Roo to create inline icons with CSS background images. (Defaults to\n\"http://Roojs.com/s.gif\" and you should change this to a URL on your server)."
          },
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "String"
          }
        ]
      },
      "_name": "Roo.BLANK_IMAGE_URL",
      "name": "Roo.BLANK_IMAGE_URL",
      "alias": "Roo.BLANK_IMAGE_URL",
      "desc": "URL to a 1x1 transparent gif image used by Roo to create inline icons with CSS background images. (Defaults to\n\"http://Roojs.com/s.gif\" and you should change this to a URL on your server).",
      "type": "String",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.applyIf": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "obj",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The receiver of the properties"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "config",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The source of the properties"
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "obj",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The receiver of the properties"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "config",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The source of the properties"
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Object",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "returns obj"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Copies all the properties of config to obj if they don't already exist.\n@param {Object} obj The receiver of the properties\n@param {Object} config The source of the properties\n@return {Object} returns obj\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Copies all the properties of config to obj if they don't already exist."
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Object",
            "name": "obj",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The receiver of the properties"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Object",
            "name": "config",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The source of the properties"
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Object",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "returns obj"
          }
        ]
      },
      "_name": "Roo.applyIf",
      "name": "Roo.applyIf",
      "alias": "Roo.applyIf",
      "desc": "Copies all the properties of config to obj if they don't already exist.",
      "type": "Object",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.addBehaviors": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "obj",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The list of behaviors to apply"
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "obj",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The list of behaviors to apply"
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Applies event listeners to elements by selectors when the document is ready.\nThe event name is specified with an @ suffix.\n<pre><code>\nRoo.addBehaviors({\n   // add a listener for click on all anchors in element with id foo\n   '#foo a@click' : function(e, t){\n       // do something\n   },\n\n   // add the same listener to multiple selectors (separated by comma BEFORE the @)\n   '#foo a, #bar span.some-class@mouseover' : function(){\n       // do something\n   }\n});\n</code></pre>\n@param {Object} obj The list of behaviors to apply\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Applies event listeners to elements by selectors when the document is ready.\nThe event name is specified with an @ suffix.\n<pre><code>\nRoo.addBehaviors({\n   // add a listener for click on all anchors in element with id foo\n   '#foo a@click' : function(e, t){\n       // do something\n   },\n\n   // add the same listener to multiple selectors (separated by comma BEFORE the @)\n   '#foo a, #bar span.some-class@mouseover' : function(){\n       // do something\n   }\n});\n</code></pre>"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Object",
            "name": "obj",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The list of behaviors to apply"
          }
        ]
      },
      "_name": "Roo.addBehaviors",
      "name": "Roo.addBehaviors",
      "alias": "Roo.addBehaviors",
      "desc": "Applies event listeners to elements by selectors when the document is ready.\nThe event name is specified with an @ suffix.\n<pre><code>\nRoo.addBehaviors({\n   // add a listener for click on all anchors in element with id foo\n   '#foo a@click' : function(e, t){\n       // do something\n   },\n\n   // add the same listener to multiple selectors (separated by comma BEFORE the @)\n   '#foo a, #bar span.some-class@mouseover' : function(){\n       // do something\n   }\n});\n</code></pre>",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.id": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String/HTMLElement/Element",
          "name": "el",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) The element to generate an id for"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "prefix",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) Id prefix (defaults \"Roo-gen\")"
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String/HTMLElement/Element",
          "name": "el",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) The element to generate an id for"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "prefix",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) Id prefix (defaults \"Roo-gen\")"
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "String",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The generated Id."
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Generates unique ids. If the element already has an id, it is unchanged\n@param {String/HTMLElement/Element} el (optional) The element to generate an id for\n@param {String} prefix (optional) Id prefix (defaults \"Roo-gen\")\n@return {String} The generated Id.\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Generates unique ids. If the element already has an id, it is unchanged"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String/HTMLElement/Element",
            "name": "el",
            "isOptional": false,
            "defaultValue": "",
            "desc": "(optional) The element to generate an id for"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "prefix",
            "isOptional": false,
            "defaultValue": "",
            "desc": "(optional) Id prefix (defaults \"Roo-gen\")"
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "String",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The generated Id."
          }
        ]
      },
      "_name": "Roo.id",
      "name": "Roo.id",
      "alias": "Roo.id",
      "desc": "Generates unique ids. If the element already has an id, it is unchanged",
      "type": "String",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.extend": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "subclass",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The class inheriting the functionality"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "superclass",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The class being extended"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "overrides",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) A literal with members"
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "subclass",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The class inheriting the functionality"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "superclass",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The class being extended"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "overrides",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) A literal with members"
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Extends one class with another class and optionally overrides members with the passed literal. This class\nalso adds the function \"override()\" to the class that can be used to override\nmembers on an instance.\n@param {Object} subclass The class inheriting the functionality\n@param {Object} superclass The class being extended\n@param {Object} overrides (optional) A literal with members\n@method extend\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Extends one class with another class and optionally overrides members with the passed literal. This class\nalso adds the function \"override()\" to the class that can be used to override\nmembers on an instance."
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Object",
            "name": "subclass",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The class inheriting the functionality"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Object",
            "name": "superclass",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The class being extended"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Object",
            "name": "overrides",
            "isOptional": false,
            "defaultValue": "",
            "desc": "(optional) A literal with members"
          },
          {
            "*object": "DocTag",
            "title": "method",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "extend"
          }
        ]
      },
      "_name": "Roo.extend",
      "name": "Roo.extend",
      "alias": "Roo.extend",
      "desc": "Extends one class with another class and optionally overrides members with the passed literal. This class\nalso adds the function \"override()\" to the class that can be used to override\nmembers on an instance.",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.override": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "origclass",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The class to override"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "overrides",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The list of functions to add to origClass.  This should be specified as an object literal\ncontaining one or more methods."
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "origclass",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The class to override"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "overrides",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The list of functions to add to origClass.  This should be specified as an object literal\ncontaining one or more methods."
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Adds a list of functions to the prototype of an existing class, overwriting any existing methods with the same name.\nUsage:<pre><code>\nRoo.override(MyClass, {\n    newMethod1: function(){\n        // etc.\n    },\n    newMethod2: function(foo){\n        // etc.\n    }\n});\n </code></pre>\n@param {Object} origclass The class to override\n@param {Object} overrides The list of functions to add to origClass.  This should be specified as an object literal\ncontaining one or more methods.\n@method override\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Adds a list of functions to the prototype of an existing class, overwriting any existing methods with the same name.\nUsage:<pre><code>\nRoo.override(MyClass, {\n    newMethod1: function(){\n        // etc.\n    },\n    newMethod2: function(foo){\n        // etc.\n    }\n});\n </code></pre>"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Object",
            "name": "origclass",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The class to override"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Object",
            "name": "overrides",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The list of functions to add to origClass.  This should be specified as an object literal\ncontaining one or more methods."
          },
          {
            "*object": "DocTag",
            "title": "method",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "override"
          }
        ]
      },
      "_name": "Roo.override",
      "name": "Roo.override",
      "alias": "Roo.override",
      "desc": "Adds a list of functions to the prototype of an existing class, overwriting any existing methods with the same name.\nUsage:<pre><code>\nRoo.override(MyClass, {\n    newMethod1: function(){\n        // etc.\n    },\n    newMethod2: function(foo){\n        // etc.\n    }\n});\n </code></pre>",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.namespace": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "namespace1",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "namespace2",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "etc",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "namespace1",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "namespace2",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "etc",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Creates namespaces to be used for scoping variables and classes so that they are not global.  Usage:\n<pre><code>\nRoo.namespace('Company', 'Company.data');\nCompany.Widget = function() { ... }\nCompany.data.CustomStore = function(config) { ... }\n</code></pre>\n@param {String} namespace1\n@param {String} namespace2\n@param {String} etc\n@method namespace\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Creates namespaces to be used for scoping variables and classes so that they are not global.  Usage:\n<pre><code>\nRoo.namespace('Company', 'Company.data');\nCompany.Widget = function() { ... }\nCompany.data.CustomStore = function(config) { ... }\n</code></pre>"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "namespace1",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "namespace2",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "etc",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "method",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "namespace"
          }
        ]
      },
      "_name": "Roo.namespace",
      "name": "Roo.namespace",
      "alias": "Roo.namespace",
      "desc": "Creates namespaces to be used for scoping variables and classes so that they are not global.  Usage:\n<pre><code>\nRoo.namespace('Company', 'Company.data');\nCompany.Widget = function() { ... }\nCompany.data.CustomStore = function(config) { ... }\n</code></pre>",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.factory": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "classname",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "namespace",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional)"
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "classname",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "namespace",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional)"
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Creates namespaces to be used for scoping variables and classes so that they are not global.  Usage:\n<pre><code>\nRoo.factory({ xns: Roo.data, xtype : 'Store', .....});\nRoo.factory(conf, Roo.data);\n</code></pre>\n@param {String} classname\n@param {String} namespace (optional)\n@method factory\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Creates namespaces to be used for scoping variables and classes so that they are not global.  Usage:\n<pre><code>\nRoo.factory({ xns: Roo.data, xtype : 'Store', .....});\nRoo.factory(conf, Roo.data);\n</code></pre>"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "classname",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "namespace",
            "isOptional": false,
            "defaultValue": "",
            "desc": "(optional)"
          },
          {
            "*object": "DocTag",
            "title": "method",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "factory"
          }
        ]
      },
      "_name": "Roo.factory",
      "name": "Roo.factory",
      "alias": "Roo.factory",
      "desc": "Creates namespaces to be used for scoping variables and classes so that they are not global.  Usage:\n<pre><code>\nRoo.factory({ xns: Roo.data, xtype : 'Store', .....});\nRoo.factory(conf, Roo.data);\n</code></pre>",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.urlEncode": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "o",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "o",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "String",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Takes an object and converts it to an encoded URL. e.g. Roo.urlEncode({foo: 1, bar: 2}); would return \"foo=1&bar=2\".  Optionally, property values can be arrays, instead of keys and the resulting string that's returned will contain a name/value pair for each array value.\n@param {Object} o\n@return {String}\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Takes an object and converts it to an encoded URL. e.g. Roo.urlEncode({foo: 1, bar: 2}); would return \"foo=1&bar=2\".  Optionally, property values can be arrays, instead of keys and the resulting string that's returned will contain a name/value pair for each array value."
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Object",
            "name": "o",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "String",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Roo.urlEncode",
      "name": "Roo.urlEncode",
      "alias": "Roo.urlEncode",
      "desc": "Takes an object and converts it to an encoded URL. e.g. Roo.urlEncode({foo: 1, bar: 2}); would return \"foo=1&bar=2\".  Optionally, property values can be arrays, instead of keys and the resulting string that's returned will contain a name/value pair for each array value.",
      "type": "String",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.urlDecode": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "string",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Boolean",
          "name": "overwrite",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) Items of the same name will overwrite previous values instead of creating an an array (Defaults to false)."
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "string",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Boolean",
          "name": "overwrite",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) Items of the same name will overwrite previous values instead of creating an an array (Defaults to false)."
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Object",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "A literal with members"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Takes an encoded URL and and converts it to an object. e.g. Roo.urlDecode(\"foo=1&bar=2\"); would return {foo: 1, bar: 2} or Roo.urlDecode(\"foo=1&bar=2&bar=3&bar=4\", true); would return {foo: 1, bar: [2, 3, 4]}.\n@param {String} string\n@param {Boolean} overwrite (optional) Items of the same name will overwrite previous values instead of creating an an array (Defaults to false).\n@return {Object} A literal with members\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Takes an encoded URL and and converts it to an object. e.g. Roo.urlDecode(\"foo=1&bar=2\"); would return {foo: 1, bar: 2} or Roo.urlDecode(\"foo=1&bar=2&bar=3&bar=4\", true); would return {foo: 1, bar: [2, 3, 4]}."
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "string",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Boolean",
            "name": "overwrite",
            "isOptional": false,
            "defaultValue": "",
            "desc": "(optional) Items of the same name will overwrite previous values instead of creating an an array (Defaults to false)."
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Object",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "A literal with members"
          }
        ]
      },
      "_name": "Roo.urlDecode",
      "name": "Roo.urlDecode",
      "alias": "Roo.urlDecode",
      "desc": "Takes an encoded URL and and converts it to an object. e.g. Roo.urlDecode(\"foo=1&bar=2\"); would return {foo: 1, bar: 2} or Roo.urlDecode(\"foo=1&bar=2&bar=3&bar=4\", true); would return {foo: 1, bar: [2, 3, 4]}.",
      "type": "Object",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.each": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Array/NodeList/Mixed",
          "name": "array",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Function",
          "name": "fn",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "scope",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Array/NodeList/Mixed",
          "name": "array",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Function",
          "name": "fn",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "scope",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Iterates an array calling the passed function with each item, stopping if your function returns false. If the\npassed array is not really an array, your function is called once with it.\nThe supplied function is called with (Object item, Number index, Array allItems).\n@param {Array/NodeList/Mixed} array\n@param {Function} fn\n@param {Object} scope\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Iterates an array calling the passed function with each item, stopping if your function returns false. If the\npassed array is not really an array, your function is called once with it.\nThe supplied function is called with (Object item, Number index, Array allItems)."
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Array/NodeList/Mixed",
            "name": "array",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Function",
            "name": "fn",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Object",
            "name": "scope",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Roo.each",
      "name": "Roo.each",
      "alias": "Roo.each",
      "desc": "Iterates an array calling the passed function with each item, stopping if your function returns false. If the\npassed array is not really an array, your function is called once with it.\nThe supplied function is called with (Object item, Number index, Array allItems).",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.escapeRe": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "str",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "str",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "String",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Escapes the passed string for use in a regular expression\n@param {String} str\n@return {String}\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Escapes the passed string for use in a regular expression"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "str",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "String",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Roo.escapeRe",
      "name": "Roo.escapeRe",
      "alias": "Roo.escapeRe",
      "desc": "Escapes the passed string for use in a regular expression",
      "type": "String",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.getDom": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String/HTMLElement/Roo.Element",
          "name": "el",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String/HTMLElement/Roo.Element",
          "name": "el",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "HTMLElement"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Return the dom node for the passed string (id), dom node, or Roo.Element\n@param {String/HTMLElement/Roo.Element} el\n@return HTMLElement\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Return the dom node for the passed string (id), dom node, or Roo.Element"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String/HTMLElement/Roo.Element",
            "name": "el",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "HTMLElement"
          }
        ]
      },
      "_name": "Roo.getDom",
      "name": "Roo.getDom",
      "alias": "Roo.getDom",
      "desc": "Return the dom node for the passed string (id), dom node, or Roo.Element",
      "type": "",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.getCmp": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "id",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "id",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "Roo.Component"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Shorthand for {@link Roo.ComponentMgr#get}\n@param {String} id\n@return Roo.Component\n        ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Shorthand for {@link Roo.ComponentMgr#get}"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "id",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Roo.Component"
          }
        ]
      },
      "_name": "Roo.getCmp",
      "name": "Roo.getCmp",
      "alias": "Roo.getCmp",
      "desc": "Shorthand for {@link Roo.ComponentMgr#get}",
      "type": "",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.type": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Mixed",
          "name": "object",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Mixed",
          "name": "object",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "String",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Returns the type of object that is passed in. If the object passed in is null or undefined it\nreturn false otherwise it returns one of the following values:<ul>\n<li><b>string</b>: If the object passed is a string</li>\n<li><b>number</b>: If the object passed is a number</li>\n<li><b>boolean</b>: If the object passed is a boolean value</li>\n<li><b>function</b>: If the object passed is a function reference</li>\n<li><b>object</b>: If the object passed is an object</li>\n<li><b>array</b>: If the object passed is an array</li>\n<li><b>regexp</b>: If the object passed is a regular expression</li>\n<li><b>element</b>: If the object passed is a DOM Element</li>\n<li><b>nodelist</b>: If the object passed is a DOM NodeList</li>\n<li><b>textnode</b>: If the object passed is a DOM text node and contains something other than whitespace</li>\n<li><b>whitespace</b>: If the object passed is a DOM text node and contains only whitespace</li>\n@param {Mixed} object\n@return {String}\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Returns the type of object that is passed in. If the object passed in is null or undefined it\nreturn false otherwise it returns one of the following values:<ul>\n<li><b>string</b>: If the object passed is a string</li>\n<li><b>number</b>: If the object passed is a number</li>\n<li><b>boolean</b>: If the object passed is a boolean value</li>\n<li><b>function</b>: If the object passed is a function reference</li>\n<li><b>object</b>: If the object passed is an object</li>\n<li><b>array</b>: If the object passed is an array</li>\n<li><b>regexp</b>: If the object passed is a regular expression</li>\n<li><b>element</b>: If the object passed is a DOM Element</li>\n<li><b>nodelist</b>: If the object passed is a DOM NodeList</li>\n<li><b>textnode</b>: If the object passed is a DOM text node and contains something other than whitespace</li>\n<li><b>whitespace</b>: If the object passed is a DOM text node and contains only whitespace</li>"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Mixed",
            "name": "object",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "String",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Roo.type",
      "name": "Roo.type",
      "alias": "Roo.type",
      "desc": "Returns the type of object that is passed in. If the object passed in is null or undefined it\nreturn false otherwise it returns one of the following values:<ul>\n<li><b>string</b>: If the object passed is a string</li>\n<li><b>number</b>: If the object passed is a number</li>\n<li><b>boolean</b>: If the object passed is a boolean value</li>\n<li><b>function</b>: If the object passed is a function reference</li>\n<li><b>object</b>: If the object passed is an object</li>\n<li><b>array</b>: If the object passed is an array</li>\n<li><b>regexp</b>: If the object passed is a regular expression</li>\n<li><b>element</b>: If the object passed is a DOM Element</li>\n<li><b>nodelist</b>: If the object passed is a DOM NodeList</li>\n<li><b>textnode</b>: If the object passed is a DOM text node and contains something other than whitespace</li>\n<li><b>whitespace</b>: If the object passed is a DOM text node and contains only whitespace</li>",
      "type": "String",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.isEmpty": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Mixed",
          "name": "value",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The value to test"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Boolean",
          "name": "allowBlank",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) Pass true if an empty string is not considered empty"
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Mixed",
          "name": "value",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The value to test"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Boolean",
          "name": "allowBlank",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) Pass true if an empty string is not considered empty"
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Boolean",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Returns true if the passed value is null, undefined or an empty string (optional).\n@param {Mixed} value The value to test\n@param {Boolean} allowBlank (optional) Pass true if an empty string is not considered empty\n@return {Boolean}\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Returns true if the passed value is null, undefined or an empty string (optional)."
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Mixed",
            "name": "value",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The value to test"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Boolean",
            "name": "allowBlank",
            "isOptional": false,
            "defaultValue": "",
            "desc": "(optional) Pass true if an empty string is not considered empty"
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Boolean",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Roo.isEmpty",
      "name": "Roo.isEmpty",
      "alias": "Roo.isEmpty",
      "desc": "Returns true if the passed value is null, undefined or an empty string (optional).",
      "type": "Boolean",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.isOpera": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n @type Boolean ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Boolean"
          }
        ]
      },
      "_name": "Roo.isOpera",
      "name": "Roo.isOpera",
      "alias": "Roo.isOpera",
      "type": "Boolean",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "desc": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.isSafari": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n @type Boolean ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Boolean"
          }
        ]
      },
      "_name": "Roo.isSafari",
      "name": "Roo.isSafari",
      "alias": "Roo.isSafari",
      "type": "Boolean",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "desc": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.isIE": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n @type Boolean ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Boolean"
          }
        ]
      },
      "_name": "Roo.isIE",
      "name": "Roo.isIE",
      "alias": "Roo.isIE",
      "type": "Boolean",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "desc": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.isIE7": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n @type Boolean ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Boolean"
          }
        ]
      },
      "_name": "Roo.isIE7",
      "name": "Roo.isIE7",
      "alias": "Roo.isIE7",
      "type": "Boolean",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "desc": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.isGecko": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n @type Boolean ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Boolean"
          }
        ]
      },
      "_name": "Roo.isGecko",
      "name": "Roo.isGecko",
      "alias": "Roo.isGecko",
      "type": "Boolean",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "desc": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.isBorderBox": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n @type Boolean ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Boolean"
          }
        ]
      },
      "_name": "Roo.isBorderBox",
      "name": "Roo.isBorderBox",
      "alias": "Roo.isBorderBox",
      "type": "Boolean",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "desc": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.isWindows": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n @type Boolean ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Boolean"
          }
        ]
      },
      "_name": "Roo.isWindows",
      "name": "Roo.isWindows",
      "alias": "Roo.isWindows",
      "type": "Boolean",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "desc": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.isLinux": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n @type Boolean ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Boolean"
          }
        ]
      },
      "_name": "Roo.isLinux",
      "name": "Roo.isLinux",
      "alias": "Roo.isLinux",
      "type": "Boolean",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "desc": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.isMac": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n @type Boolean ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Boolean"
          }
        ]
      },
      "_name": "Roo.isMac",
      "name": "Roo.isMac",
      "alias": "Roo.isMac",
      "type": "Boolean",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "desc": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.useShims": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc By default, Ext intelligently decides whether floating elements should be shimmed. If you are using flash,\nyou may want to set this to true.\n\n@type Boolean\n         ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "By default, Ext intelligently decides whether floating elements should be shimmed. If you are using flash,\nyou may want to set this to true."
          },
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Boolean"
          }
        ]
      },
      "_name": "Roo.useShims",
      "name": "Roo.useShims",
      "alias": "Roo.useShims",
      "desc": "By default, Ext intelligently decides whether floating elements should be shimmed. If you are using flash,\nyou may want to set this to true.",
      "type": "Boolean",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    }
  }
}