{
  "*object": "SymbolSet",
  "_index": {
    "Date": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "CONSTRUCTOR",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@class Date\n@desc \nThe date parsing and format syntax is a subset of\n<a href=\"http://www.php.net/date\">PHP's date() function</a>, and the formats that are\nsupported will provide results equivalent to their PHP versions.\n\nFollowing is the list of all currently supported formats:\n<pre>\nSample date:\n'Wed Jan 10 2007 15:05:01 GMT-0600 (Central Standard Time)'\n\nFormat  Output      Description\n------  ----------  --------------------------------------------------------------\n  d      10         Day of the month, 2 digits with leading zeros\n  D      Wed        A textual representation of a day, three letters\n  j      10         Day of the month without leading zeros\n  l      Wednesday  A full textual representation of the day of the week\n  S      th         English ordinal day of month suffix, 2 chars (use with j)\n  w      3          Numeric representation of the day of the week\n  z      9          The julian date, or day of the year (0-365)\n  W      01         ISO-8601 2-digit week number of year, weeks starting on Monday (00-52)\n  F      January    A full textual representation of the month\n  m      01         Numeric representation of a month, with leading zeros\n  M      Jan        Month name abbreviation, three letters\n  n      1          Numeric representation of a month, without leading zeros\n  t      31         Number of days in the given month\n  L      0          Whether it's a leap year (1 if it is a leap year, else 0)\n  Y      2007       A full numeric representation of a year, 4 digits\n  y      07         A two digit representation of a year\n  a      pm         Lowercase Ante meridiem and Post meridiem\n  A      PM         Uppercase Ante meridiem and Post meridiem\n  g      3          12-hour format of an hour without leading zeros\n  G      15         24-hour format of an hour without leading zeros\n  h      03         12-hour format of an hour with leading zeros\n  H      15         24-hour format of an hour with leading zeros\n  i      05         Minutes with leading zeros\n  s      01         Seconds, with leading zeros\n  O      -0600      Difference to Greenwich time (GMT) in hours\n  T      CST        Timezone setting of the machine running the code\n  Z      -21600     Timezone offset in seconds (negative if west of UTC, positive if east)\n</pre>\n\nExample usage (note that you must escape format specifiers with '\\\\' to render them as character literals):\n<pre><code>\nvar dt = new Date('1/10/2007 03:05:01 PM GMT-0600');\ndocument.write(dt.format('Y-m-d'));                         //2007-01-10\ndocument.write(dt.format('F j, Y, g:i a'));                 //January 10, 2007, 3:05 pm\ndocument.write(dt.format('l, \\\\t\\\\he dS of F Y h:i:s A'));  //Wednesday, the 10th of January 2007 03:05:01 PM\n </code></pre>\n\nHere are some standard date/time patterns that you might find helpful.  They\nare not part of the source of Date.js, but to use them you can simply copy this\nblock of code into any script that is included after Date.js and they will also become\nglobally available on the Date object.  Feel free to add or remove patterns as needed in your code.\n<pre><code>\nDate.patterns = {\n    ISO8601Long:\"Y-m-d H:i:s\",\n    ISO8601Short:\"Y-m-d\",\n    ShortDate: \"n/j/Y\",\n    LongDate: \"l, F d, Y\",\n    FullDateTime: \"l, F d, Y g:i:s A\",\n    MonthDay: \"F d\",\n    ShortTime: \"g:i A\",\n    LongTime: \"g:i:s A\",\n    SortableDateTime: \"Y-m-d\\\\TH:i:s\",\n    UniversalSortableDateTime: \"Y-m-d H:i:sO\",\n    YearMonth: \"F, Y\"\n};\n</code></pre>\n\nExample usage:\n<pre><code>\nvar dt = new Date();\ndocument.write(dt.format(Date.patterns.ShortDate));\n </code></pre>\n \n",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "class",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Date"
          },
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The date parsing and format syntax is a subset of\n<a href=\"http://www.php.net/date\">PHP's date() function</a>, and the formats that are\nsupported will provide results equivalent to their PHP versions.\n\nFollowing is the list of all currently supported formats:\n<pre>\nSample date:\n'Wed Jan 10 2007 15:05:01 GMT-0600 (Central Standard Time)'\n\nFormat  Output      Description\n------  ----------  --------------------------------------------------------------\n  d      10         Day of the month, 2 digits with leading zeros\n  D      Wed        A textual representation of a day, three letters\n  j      10         Day of the month without leading zeros\n  l      Wednesday  A full textual representation of the day of the week\n  S      th         English ordinal day of month suffix, 2 chars (use with j)\n  w      3          Numeric representation of the day of the week\n  z      9          The julian date, or day of the year (0-365)\n  W      01         ISO-8601 2-digit week number of year, weeks starting on Monday (00-52)\n  F      January    A full textual representation of the month\n  m      01         Numeric representation of a month, with leading zeros\n  M      Jan        Month name abbreviation, three letters\n  n      1          Numeric representation of a month, without leading zeros\n  t      31         Number of days in the given month\n  L      0          Whether it's a leap year (1 if it is a leap year, else 0)\n  Y      2007       A full numeric representation of a year, 4 digits\n  y      07         A two digit representation of a year\n  a      pm         Lowercase Ante meridiem and Post meridiem\n  A      PM         Uppercase Ante meridiem and Post meridiem\n  g      3          12-hour format of an hour without leading zeros\n  G      15         24-hour format of an hour without leading zeros\n  h      03         12-hour format of an hour with leading zeros\n  H      15         24-hour format of an hour with leading zeros\n  i      05         Minutes with leading zeros\n  s      01         Seconds, with leading zeros\n  O      -0600      Difference to Greenwich time (GMT) in hours\n  T      CST        Timezone setting of the machine running the code\n  Z      -21600     Timezone offset in seconds (negative if west of UTC, positive if east)\n</pre>\n\nExample usage (note that you must escape format specifiers with '\\\\' to render them as character literals):\n<pre><code>\nvar dt = new Date('1/10/2007 03:05:01 PM GMT-0600');\ndocument.write(dt.format('Y-m-d'));                         //2007-01-10\ndocument.write(dt.format('F j, Y, g:i a'));                 //January 10, 2007, 3:05 pm\ndocument.write(dt.format('l, \\\\t\\\\he dS of F Y h:i:s A'));  //Wednesday, the 10th of January 2007 03:05:01 PM\n </code></pre>\n\nHere are some standard date/time patterns that you might find helpful.  They\nare not part of the source of Date.js, but to use them you can simply copy this\nblock of code into any script that is included after Date.js and they will also become\nglobally available on the Date object.  Feel free to add or remove patterns as needed in your code.\n<pre><code>\nDate.patterns = {\n    ISO8601Long:\"Y-m-d H:i:s\",\n    ISO8601Short:\"Y-m-d\",\n    ShortDate: \"n/j/Y\",\n    LongDate: \"l, F d, Y\",\n    FullDateTime: \"l, F d, Y g:i:s A\",\n    MonthDay: \"F d\",\n    ShortTime: \"g:i A\",\n    LongTime: \"g:i:s A\",\n    SortableDateTime: \"Y-m-d\\\\TH:i:s\",\n    UniversalSortableDateTime: \"Y-m-d H:i:sO\",\n    YearMonth: \"F, Y\"\n};\n</code></pre>\n\nExample usage:\n<pre><code>\nvar dt = new Date();\ndocument.write(dt.format(Date.patterns.ShortDate));\n </code></pre>"
          }
        ]
      },
      "_name": "Date",
      "name": "Date",
      "alias": "Date",
      "desc": "The date parsing and format syntax is a subset of\n<a href=\"http://www.php.net/date\">PHP's date() function</a>, and the formats that are\nsupported will provide results equivalent to their PHP versions.\n\nFollowing is the list of all currently supported formats:\n<pre>\nSample date:\n'Wed Jan 10 2007 15:05:01 GMT-0600 (Central Standard Time)'\n\nFormat  Output      Description\n------  ----------  --------------------------------------------------------------\n  d      10         Day of the month, 2 digits with leading zeros\n  D      Wed        A textual representation of a day, three letters\n  j      10         Day of the month without leading zeros\n  l      Wednesday  A full textual representation of the day of the week\n  S      th         English ordinal day of month suffix, 2 chars (use with j)\n  w      3          Numeric representation of the day of the week\n  z      9          The julian date, or day of the year (0-365)\n  W      01         ISO-8601 2-digit week number of year, weeks starting on Monday (00-52)\n  F      January    A full textual representation of the month\n  m      01         Numeric representation of a month, with leading zeros\n  M      Jan        Month name abbreviation, three letters\n  n      1          Numeric representation of a month, without leading zeros\n  t      31         Number of days in the given month\n  L      0          Whether it's a leap year (1 if it is a leap year, else 0)\n  Y      2007       A full numeric representation of a year, 4 digits\n  y      07         A two digit representation of a year\n  a      pm         Lowercase Ante meridiem and Post meridiem\n  A      PM         Uppercase Ante meridiem and Post meridiem\n  g      3          12-hour format of an hour without leading zeros\n  G      15         24-hour format of an hour without leading zeros\n  h      03         12-hour format of an hour with leading zeros\n  H      15         24-hour format of an hour with leading zeros\n  i      05         Minutes with leading zeros\n  s      01         Seconds, with leading zeros\n  O      -0600      Difference to Greenwich time (GMT) in hours\n  T      CST        Timezone setting of the machine running the code\n  Z      -21600     Timezone offset in seconds (negative if west of UTC, positive if east)\n</pre>\n\nExample usage (note that you must escape format specifiers with '\\\\' to render them as character literals):\n<pre><code>\nvar dt = new Date('1/10/2007 03:05:01 PM GMT-0600');\ndocument.write(dt.format('Y-m-d'));                         //2007-01-10\ndocument.write(dt.format('F j, Y, g:i a'));                 //January 10, 2007, 3:05 pm\ndocument.write(dt.format('l, \\\\t\\\\he dS of F Y h:i:s A'));  //Wednesday, the 10th of January 2007 03:05:01 PM\n </code></pre>\n\nHere are some standard date/time patterns that you might find helpful.  They\nare not part of the source of Date.js, but to use them you can simply copy this\nblock of code into any script that is included after Date.js and they will also become\nglobally available on the Date object.  Feel free to add or remove patterns as needed in your code.\n<pre><code>\nDate.patterns = {\n    ISO8601Long:\"Y-m-d H:i:s\",\n    ISO8601Short:\"Y-m-d\",\n    ShortDate: \"n/j/Y\",\n    LongDate: \"l, F d, Y\",\n    FullDateTime: \"l, F d, Y g:i:s A\",\n    MonthDay: \"F d\",\n    ShortTime: \"g:i A\",\n    LongTime: \"g:i:s A\",\n    SortableDateTime: \"Y-m-d\\\\TH:i:s\",\n    UniversalSortableDateTime: \"Y-m-d H:i:sO\",\n    YearMonth: \"F, Y\"\n};\n</code></pre>\n\nExample usage:\n<pre><code>\nvar dt = new Date();\ndocument.write(dt.format(Date.patterns.ShortDate));\n </code></pre>",
      "classDesc": "Date",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Date#getElapsed": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Date",
          "name": "date",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) Defaults to now"
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Date",
          "name": "date",
          "isOptional": false,
          "defaultValue": "",
          "desc": "(optional) Defaults to now"
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Number",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The diff in milliseconds"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc \n Returns the number of milliseconds between this date and date\n @param {Date} date (optional) Defaults to now\n @return {Number} The diff in milliseconds\n @member Date getElapsed\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Returns the number of milliseconds between this date and date"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Date",
            "name": "date",
            "isOptional": false,
            "defaultValue": "",
            "desc": "(optional) Defaults to now"
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Number",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The diff in milliseconds"
          },
          {
            "*object": "DocTag",
            "title": "member",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Date getElapsed"
          }
        ]
      },
      "_name": "Date#getElapsed",
      "name": "Date#getElapsed",
      "alias": "Date#getElapsed",
      "desc": "Returns the number of milliseconds between this date and date",
      "type": "Number",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date#format": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "format",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The format string"
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "format",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The format string"
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "String",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The formatted date"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Formats a date given the supplied format string\n@param {String} format The format string\n@return {String} The formatted date\n@method\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Formats a date given the supplied format string"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "format",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The format string"
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "String",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The formatted date"
          },
          {
            "*object": "DocTag",
            "title": "method",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Date#format",
      "name": "Date#format",
      "alias": "Date#format",
      "desc": "Formats a date given the supplied format string",
      "type": "String",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date.parseDate": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "input",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The unparsed date as a string"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "format",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The format the date is in"
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "input",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The unparsed date as a string"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "format",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The format the date is in"
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Date",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The parsed date"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Parses the passed string using the specified format. Note that this function expects dates in normal calendar\nformat, meaning that months are 1-based (1 = January) and not zero-based like in JavaScript dates.  Any part of\nthe date format that is not specified will default to the current date value for that part.  Time parts can also\nbe specified, but default to 0.  Keep in mind that the input date string must precisely match the specified format\nstring or the parse operation will fail.\nExample Usage:\n<pre><code>\n//dt = Fri May 25 2007 (current date)\nvar dt = new Date();\n\n//dt = Thu May 25 2006 (today's month/day in 2006)\ndt = Date.parseDate(\"2006\", \"Y\");\n\n//dt = Sun Jan 15 2006 (all date parts specified)\ndt = Date.parseDate(\"2006-1-15\", \"Y-m-d\");\n\n//dt = Sun Jan 15 2006 15:20:01 GMT-0600 (CST)\ndt = Date.parseDate(\"2006-1-15 3:20:01 PM\", \"Y-m-d h:i:s A\" );\n</code></pre>\n@param {String} input The unparsed date as a string\n@param {String} format The format the date is in\n@return {Date} The parsed date\n@static\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Parses the passed string using the specified format. Note that this function expects dates in normal calendar\nformat, meaning that months are 1-based (1 = January) and not zero-based like in JavaScript dates.  Any part of\nthe date format that is not specified will default to the current date value for that part.  Time parts can also\nbe specified, but default to 0.  Keep in mind that the input date string must precisely match the specified format\nstring or the parse operation will fail.\nExample Usage:\n<pre><code>\n//dt = Fri May 25 2007 (current date)\nvar dt = new Date();\n\n//dt = Thu May 25 2006 (today's month/day in 2006)\ndt = Date.parseDate(\"2006\", \"Y\");\n\n//dt = Sun Jan 15 2006 (all date parts specified)\ndt = Date.parseDate(\"2006-1-15\", \"Y-m-d\");\n\n//dt = Sun Jan 15 2006 15:20:01 GMT-0600 (CST)\ndt = Date.parseDate(\"2006-1-15 3:20:01 PM\", \"Y-m-d h:i:s A\" );\n</code></pre>"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "input",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The unparsed date as a string"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "format",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The format the date is in"
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Date",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The parsed date"
          },
          {
            "*object": "DocTag",
            "title": "static",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Date.parseDate",
      "name": "Date.parseDate",
      "alias": "Date.parseDate",
      "desc": "Parses the passed string using the specified format. Note that this function expects dates in normal calendar\nformat, meaning that months are 1-based (1 = January) and not zero-based like in JavaScript dates.  Any part of\nthe date format that is not specified will default to the current date value for that part.  Time parts can also\nbe specified, but default to 0.  Keep in mind that the input date string must precisely match the specified format\nstring or the parse operation will fail.\nExample Usage:\n<pre><code>\n//dt = Fri May 25 2007 (current date)\nvar dt = new Date();\n\n//dt = Thu May 25 2006 (today's month/day in 2006)\ndt = Date.parseDate(\"2006\", \"Y\");\n\n//dt = Sun Jan 15 2006 (all date parts specified)\ndt = Date.parseDate(\"2006-1-15\", \"Y-m-d\");\n\n//dt = Sun Jan 15 2006 15:20:01 GMT-0600 (CST)\ndt = Date.parseDate(\"2006-1-15 3:20:01 PM\", \"Y-m-d h:i:s A\" );\n</code></pre>",
      "isStatic": true,
      "type": "Date",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date#getTimezone": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "String",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The abbreviated timezone name (e.g. 'CST')"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Get the timezone abbreviation of the current date (equivalent to the format specifier 'T').\n@return {String} The abbreviated timezone name (e.g. 'CST')\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Get the timezone abbreviation of the current date (equivalent to the format specifier 'T')."
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "String",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The abbreviated timezone name (e.g. 'CST')"
          }
        ]
      },
      "_name": "Date#getTimezone",
      "name": "Date#getTimezone",
      "alias": "Date#getTimezone",
      "desc": "Get the timezone abbreviation of the current date (equivalent to the format specifier 'T').",
      "type": "String",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date#getGMTOffset": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "String",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The 4-character offset string prefixed with + or - (e.g. '-0600')"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Get the offset from GMT of the current date (equivalent to the format specifier 'O').\n@return {String} The 4-character offset string prefixed with + or - (e.g. '-0600')\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Get the offset from GMT of the current date (equivalent to the format specifier 'O')."
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "String",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The 4-character offset string prefixed with + or - (e.g. '-0600')"
          }
        ]
      },
      "_name": "Date#getGMTOffset",
      "name": "Date#getGMTOffset",
      "alias": "Date#getGMTOffset",
      "desc": "Get the offset from GMT of the current date (equivalent to the format specifier 'O').",
      "type": "String",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date#getDayOfYear": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Number",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "0 through 364 (365 in leap years)"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Get the numeric day number of the year, adjusted for leap year.\n@return {Number} 0 through 364 (365 in leap years)\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Get the numeric day number of the year, adjusted for leap year."
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Number",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "0 through 364 (365 in leap years)"
          }
        ]
      },
      "_name": "Date#getDayOfYear",
      "name": "Date#getDayOfYear",
      "alias": "Date#getDayOfYear",
      "desc": "Get the numeric day number of the year, adjusted for leap year.",
      "type": "Number",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date#getWeekOfYear": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "String",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "'00' through '52'"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Get the string representation of the numeric week number of the year\n(equivalent to the format specifier 'W').\n@return {String} '00' through '52'\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Get the string representation of the numeric week number of the year\n(equivalent to the format specifier 'W')."
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "String",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "'00' through '52'"
          }
        ]
      },
      "_name": "Date#getWeekOfYear",
      "name": "Date#getWeekOfYear",
      "alias": "Date#getWeekOfYear",
      "desc": "Get the string representation of the numeric week number of the year\n(equivalent to the format specifier 'W').",
      "type": "String",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date#isLeapYear": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Boolean",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "True if the current date is in a leap year, else false"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Whether or not the current date is in a leap year.\n@return {Boolean} True if the current date is in a leap year, else false\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Whether or not the current date is in a leap year."
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Boolean",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "True if the current date is in a leap year, else false"
          }
        ]
      },
      "_name": "Date#isLeapYear",
      "name": "Date#isLeapYear",
      "alias": "Date#isLeapYear",
      "desc": "Whether or not the current date is in a leap year.",
      "type": "Boolean",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date#getFirstDayOfMonth": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Number",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The day number (0-6)"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Get the first day of the current month, adjusted for leap year.  The returned value\nis the numeric day index within the week (0-6) which can be used in conjunction with\nthe {@link #monthNames} array to retrieve the textual day name.\nExample:\n<pre><code>\nvar dt = new Date('1/10/2007');\ndocument.write(Date.dayNames[dt.getFirstDayOfMonth()]); //output: 'Monday'\n</code></pre>\n@return {Number} The day number (0-6)\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Get the first day of the current month, adjusted for leap year.  The returned value\nis the numeric day index within the week (0-6) which can be used in conjunction with\nthe {@link #monthNames} array to retrieve the textual day name.\nExample:\n<pre><code>\nvar dt = new Date('1/10/2007');\ndocument.write(Date.dayNames[dt.getFirstDayOfMonth()]); //output: 'Monday'\n</code></pre>"
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Number",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The day number (0-6)"
          }
        ]
      },
      "_name": "Date#getFirstDayOfMonth",
      "name": "Date#getFirstDayOfMonth",
      "alias": "Date#getFirstDayOfMonth",
      "desc": "Get the first day of the current month, adjusted for leap year.  The returned value\nis the numeric day index within the week (0-6) which can be used in conjunction with\nthe {@link #monthNames} array to retrieve the textual day name.\nExample:\n<pre><code>\nvar dt = new Date('1/10/2007');\ndocument.write(Date.dayNames[dt.getFirstDayOfMonth()]); //output: 'Monday'\n</code></pre>",
      "type": "Number",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date#getLastDayOfMonth": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Number",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The day number (0-6)"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Get the last day of the current month, adjusted for leap year.  The returned value\nis the numeric day index within the week (0-6) which can be used in conjunction with\nthe {@link #monthNames} array to retrieve the textual day name.\nExample:\n<pre><code>\nvar dt = new Date('1/10/2007');\ndocument.write(Date.dayNames[dt.getLastDayOfMonth()]); //output: 'Wednesday'\n</code></pre>\n@return {Number} The day number (0-6)\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Get the last day of the current month, adjusted for leap year.  The returned value\nis the numeric day index within the week (0-6) which can be used in conjunction with\nthe {@link #monthNames} array to retrieve the textual day name.\nExample:\n<pre><code>\nvar dt = new Date('1/10/2007');\ndocument.write(Date.dayNames[dt.getLastDayOfMonth()]); //output: 'Wednesday'\n</code></pre>"
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Number",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The day number (0-6)"
          }
        ]
      },
      "_name": "Date#getLastDayOfMonth",
      "name": "Date#getLastDayOfMonth",
      "alias": "Date#getLastDayOfMonth",
      "desc": "Get the last day of the current month, adjusted for leap year.  The returned value\nis the numeric day index within the week (0-6) which can be used in conjunction with\nthe {@link #monthNames} array to retrieve the textual day name.\nExample:\n<pre><code>\nvar dt = new Date('1/10/2007');\ndocument.write(Date.dayNames[dt.getLastDayOfMonth()]); //output: 'Wednesday'\n</code></pre>",
      "type": "Number",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date#getFirstDateOfMonth": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Date",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Get the first date of this date's month\n@return {Date}\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Get the first date of this date's month"
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Date",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Date#getFirstDateOfMonth",
      "name": "Date#getFirstDateOfMonth",
      "alias": "Date#getFirstDateOfMonth",
      "desc": "Get the first date of this date's month",
      "type": "Date",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date#getLastDateOfMonth": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Date",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": ""
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Get the last date of this date's month\n@return {Date}\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Get the last date of this date's month"
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Date",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Date#getLastDateOfMonth",
      "name": "Date#getLastDateOfMonth",
      "alias": "Date#getLastDateOfMonth",
      "desc": "Get the last date of this date's month",
      "type": "Date",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date#getDaysInMonth": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Number",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The number of days in the month"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Get the number of days in the current month, adjusted for leap year.\n@return {Number} The number of days in the month\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Get the number of days in the current month, adjusted for leap year."
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Number",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The number of days in the month"
          }
        ]
      },
      "_name": "Date#getDaysInMonth",
      "name": "Date#getDaysInMonth",
      "alias": "Date#getDaysInMonth",
      "desc": "Get the number of days in the current month, adjusted for leap year.",
      "type": "Number",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date#getSuffix": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "String",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "'st, 'nd', 'rd' or 'th'"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Get the English ordinal suffix of the current day (equivalent to the format specifier 'S').\n@return {String} 'st, 'nd', 'rd' or 'th'\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Get the English ordinal suffix of the current day (equivalent to the format specifier 'S')."
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "String",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "'st, 'nd', 'rd' or 'th'"
          }
        ]
      },
      "_name": "Date#getSuffix",
      "name": "Date#getSuffix",
      "alias": "Date#getSuffix",
      "desc": "Get the English ordinal suffix of the current day (equivalent to the format specifier 'S').",
      "type": "String",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date.monthNames": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc An array of textual month names.\nOverride these values for international dates, for example...\nDate.monthNames = ['JanInYourLang', 'FebInYourLang', ...];\n\n@type Array\n@static\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "An array of textual month names.\nOverride these values for international dates, for example...\nDate.monthNames = ['JanInYourLang', 'FebInYourLang', ...];"
          },
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Array"
          },
          {
            "*object": "DocTag",
            "title": "static",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Date.monthNames",
      "name": "Date.monthNames",
      "alias": "Date.monthNames",
      "desc": "An array of textual month names.\nOverride these values for international dates, for example...\nDate.monthNames = ['JanInYourLang', 'FebInYourLang', ...];",
      "isStatic": true,
      "type": "Array",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date.dayNames": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc An array of textual day names.\nOverride these values for international dates, for example...\nDate.dayNames = ['SundayInYourLang', 'MondayInYourLang', ...];\n\n@type Array\n@static\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "An array of textual day names.\nOverride these values for international dates, for example...\nDate.dayNames = ['SundayInYourLang', 'MondayInYourLang', ...];"
          },
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Array"
          },
          {
            "*object": "DocTag",
            "title": "static",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          }
        ]
      },
      "_name": "Date.dayNames",
      "name": "Date.dayNames",
      "alias": "Date.dayNames",
      "desc": "An array of textual day names.\nOverride these values for international dates, for example...\nDate.dayNames = ['SundayInYourLang', 'MondayInYourLang', ...];",
      "isStatic": true,
      "type": "Array",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date#clone": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Date",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The new Date instance"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Creates and returns a new Date instance with the exact same date value as the called instance.\nDates are copied and passed by reference, so if a copied date variable is modified later, the original\nvariable will also be changed.  When the intention is to create a new variable that will not\nmodify the original instance, you should create a clone.\n\nExample of correctly cloning a date:\n<pre><code>\n//wrong way:\nvar orig = new Date('10/1/2006');\nvar copy = orig;\ncopy.setDate(5);\ndocument.write(orig);  //returns 'Thu Oct 05 2006'!\n\n//correct way:\nvar orig = new Date('10/1/2006');\nvar copy = orig.clone();\ncopy.setDate(5);\ndocument.write(orig);  //returns 'Thu Oct 01 2006'\n</code></pre>\n@return {Date} The new Date instance\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Creates and returns a new Date instance with the exact same date value as the called instance.\nDates are copied and passed by reference, so if a copied date variable is modified later, the original\nvariable will also be changed.  When the intention is to create a new variable that will not\nmodify the original instance, you should create a clone.\n\nExample of correctly cloning a date:\n<pre><code>\n//wrong way:\nvar orig = new Date('10/1/2006');\nvar copy = orig;\ncopy.setDate(5);\ndocument.write(orig);  //returns 'Thu Oct 05 2006'!\n\n//correct way:\nvar orig = new Date('10/1/2006');\nvar copy = orig.clone();\ncopy.setDate(5);\ndocument.write(orig);  //returns 'Thu Oct 01 2006'\n</code></pre>"
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Date",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The new Date instance"
          }
        ]
      },
      "_name": "Date#clone",
      "name": "Date#clone",
      "alias": "Date#clone",
      "desc": "Creates and returns a new Date instance with the exact same date value as the called instance.\nDates are copied and passed by reference, so if a copied date variable is modified later, the original\nvariable will also be changed.  When the intention is to create a new variable that will not\nmodify the original instance, you should create a clone.\n\nExample of correctly cloning a date:\n<pre><code>\n//wrong way:\nvar orig = new Date('10/1/2006');\nvar copy = orig;\ncopy.setDate(5);\ndocument.write(orig);  //returns 'Thu Oct 05 2006'!\n\n//correct way:\nvar orig = new Date('10/1/2006');\nvar copy = orig.clone();\ncopy.setDate(5);\ndocument.write(orig);  //returns 'Thu Oct 01 2006'\n</code></pre>",
      "type": "Date",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date#clearTime": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Boolean",
          "name": "clone",
          "isOptional": false,
          "defaultValue": "",
          "desc": "true to create a clone of this date, clear the time and return it"
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Boolean",
          "name": "clone",
          "isOptional": false,
          "defaultValue": "",
          "desc": "true to create a clone of this date, clear the time and return it"
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Date",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "this or the clone"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Clears any time information from this date\n @param {Boolean} clone true to create a clone of this date, clear the time and return it\n @return {Date} this or the clone\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Clears any time information from this date"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Boolean",
            "name": "clone",
            "isOptional": false,
            "defaultValue": "",
            "desc": "true to create a clone of this date, clear the time and return it"
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Date",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "this or the clone"
          }
        ]
      },
      "_name": "Date#clearTime",
      "name": "Date#clearTime",
      "alias": "Date#clearTime",
      "desc": "Clears any time information from this date",
      "type": "Date",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date.MILLI": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc  Date interval constant \n@static \n\n@type String ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Date interval constant"
          },
          {
            "*object": "DocTag",
            "title": "static",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "String"
          }
        ]
      },
      "_name": "Date.MILLI",
      "name": "Date.MILLI",
      "alias": "Date.MILLI",
      "desc": "Date interval constant",
      "isStatic": true,
      "type": "String",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date.SECOND": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc  Date interval constant \n@static \n\n@type String ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Date interval constant"
          },
          {
            "*object": "DocTag",
            "title": "static",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "String"
          }
        ]
      },
      "_name": "Date.SECOND",
      "name": "Date.SECOND",
      "alias": "Date.SECOND",
      "desc": "Date interval constant",
      "isStatic": true,
      "type": "String",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date.MINUTE": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc  Date interval constant \n@static \n\n@type String ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Date interval constant"
          },
          {
            "*object": "DocTag",
            "title": "static",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "String"
          }
        ]
      },
      "_name": "Date.MINUTE",
      "name": "Date.MINUTE",
      "alias": "Date.MINUTE",
      "desc": "Date interval constant",
      "isStatic": true,
      "type": "String",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date.HOUR": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc  Date interval constant \n@static \n\n@type String ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Date interval constant"
          },
          {
            "*object": "DocTag",
            "title": "static",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "String"
          }
        ]
      },
      "_name": "Date.HOUR",
      "name": "Date.HOUR",
      "alias": "Date.HOUR",
      "desc": "Date interval constant",
      "isStatic": true,
      "type": "String",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date.DAY": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc  Date interval constant \n@static \n\n@type String ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Date interval constant"
          },
          {
            "*object": "DocTag",
            "title": "static",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "String"
          }
        ]
      },
      "_name": "Date.DAY",
      "name": "Date.DAY",
      "alias": "Date.DAY",
      "desc": "Date interval constant",
      "isStatic": true,
      "type": "String",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date.MONTH": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc  Date interval constant \n@static \n\n@type String ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Date interval constant"
          },
          {
            "*object": "DocTag",
            "title": "static",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "String"
          }
        ]
      },
      "_name": "Date.MONTH",
      "name": "Date.MONTH",
      "alias": "Date.MONTH",
      "desc": "Date interval constant",
      "isStatic": true,
      "type": "String",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date.YEAR": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc  Date interval constant \n@static \n\n@type String ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Date interval constant"
          },
          {
            "*object": "DocTag",
            "title": "static",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": ""
          },
          {
            "*object": "DocTag",
            "title": "type",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "String"
          }
        ]
      },
      "_name": "Date.YEAR",
      "name": "Date.YEAR",
      "alias": "Date.YEAR",
      "desc": "Date interval constant",
      "isStatic": true,
      "type": "String",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Date#add": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "interval",
          "isOptional": false,
          "defaultValue": "",
          "desc": "A valid date interval enum value"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Number",
          "name": "value",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The amount to add to the current date"
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "interval",
          "isOptional": false,
          "defaultValue": "",
          "desc": "A valid date interval enum value"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Number",
          "name": "value",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The amount to add to the current date"
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "Date",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The new Date instance"
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Date.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc Provides a convenient method of performing basic date arithmetic.  This method\ndoes not modify the Date instance being called - it creates and returns\na new Date instance containing the resulting date value.\n\nExamples:\n<pre><code>\n//Basic usage:\nvar dt = new Date('10/29/2006').add(Date.DAY, 5);\ndocument.write(dt); //returns 'Fri Oct 06 2006 00:00:00'\n\n//Negative values will subtract correctly:\nvar dt2 = new Date('10/1/2006').add(Date.DAY, -5);\ndocument.write(dt2); //returns 'Tue Sep 26 2006 00:00:00'\n\n//You can even chain several calls together in one line!\nvar dt3 = new Date('10/1/2006').add(Date.DAY, 5).add(Date.HOUR, 8).add(Date.MINUTE, -30);\ndocument.write(dt3); //returns 'Fri Oct 06 2006 07:30:00'\n </code></pre>\n\n@param {String} interval   A valid date interval enum value\n@param {Number} value      The amount to add to the current date\n@return {Date} The new Date instance\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Provides a convenient method of performing basic date arithmetic.  This method\ndoes not modify the Date instance being called - it creates and returns\na new Date instance containing the resulting date value.\n\nExamples:\n<pre><code>\n//Basic usage:\nvar dt = new Date('10/29/2006').add(Date.DAY, 5);\ndocument.write(dt); //returns 'Fri Oct 06 2006 00:00:00'\n\n//Negative values will subtract correctly:\nvar dt2 = new Date('10/1/2006').add(Date.DAY, -5);\ndocument.write(dt2); //returns 'Tue Sep 26 2006 00:00:00'\n\n//You can even chain several calls together in one line!\nvar dt3 = new Date('10/1/2006').add(Date.DAY, 5).add(Date.HOUR, 8).add(Date.MINUTE, -30);\ndocument.write(dt3); //returns 'Fri Oct 06 2006 07:30:00'\n </code></pre>"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "interval",
            "isOptional": false,
            "defaultValue": "",
            "desc": "A valid date interval enum value"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Number",
            "name": "value",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The amount to add to the current date"
          },
          {
            "*object": "DocTag",
            "title": "return",
            "type": "Date",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The new Date instance"
          }
        ]
      },
      "_name": "Date#add",
      "name": "Date#add",
      "alias": "Date#add",
      "desc": "Provides a convenient method of performing basic date arithmetic.  This method\ndoes not modify the Date instance being called - it creates and returns\na new Date instance containing the resulting date value.\n\nExamples:\n<pre><code>\n//Basic usage:\nvar dt = new Date('10/29/2006').add(Date.DAY, 5);\ndocument.write(dt); //returns 'Fri Oct 06 2006 00:00:00'\n\n//Negative values will subtract correctly:\nvar dt2 = new Date('10/1/2006').add(Date.DAY, -5);\ndocument.write(dt2); //returns 'Tue Sep 26 2006 00:00:00'\n\n//You can even chain several calls together in one line!\nvar dt3 = new Date('10/1/2006').add(Date.DAY, 5).add(Date.HOUR, 8).add(Date.MINUTE, -30);\ndocument.write(dt3); //returns 'Fri Oct 06 2006 07:30:00'\n </code></pre>",
      "type": "Date",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    }
  }
}