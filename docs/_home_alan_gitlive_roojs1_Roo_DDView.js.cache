{
  "*object": "SymbolSet",
  "_index": {
    "Roo.DDView": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Element/String",
          "name": "container",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The Element in which to create the View."
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "tpl",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The template string used to create the markup for each element of the View"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "config",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The configuration properties. These include all the config options of\n{@link Roo.View} plus some specific to this class.<br>\n<p>\nDrag/drop is implemented by adding {@link Roo.data.Record}s to the target DDView. If copying is\nnot being performed, the original {@link Roo.data.Record} is removed from the source DDView.<br>\n<p>\nThe following extra CSS rules are needed to provide insertion point highlighting:<pre><code>\n.x-view-drag-insert-above {\n\tborder-top:1px dotted #3366cc;\n}\n.x-view-drag-insert-below {\n\tborder-bottom:1px dotted #3366cc;\n}\n</code></pre>"
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "CONSTRUCTOR",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Element/String",
          "name": "container",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The Element in which to create the View."
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "tpl",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The template string used to create the markup for each element of the View"
        },
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Object",
          "name": "config",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The configuration properties. These include all the config options of\n{@link Roo.View} plus some specific to this class.<br>\n<p>\nDrag/drop is implemented by adding {@link Roo.data.Record}s to the target DDView. If copying is\nnot being performed, the original {@link Roo.data.Record} is removed from the source DDView.<br>\n<p>\nThe following extra CSS rules are needed to provide insertion point highlighting:<pre><code>\n.x-view-drag-insert-above {\n\tborder-top:1px dotted #3366cc;\n}\n.x-view-drag-insert-below {\n\tborder-bottom:1px dotted #3366cc;\n}\n</code></pre>"
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DDView.js",
      "cfgs": {
        "dragGroup": {
          "*object": "DocTag",
          "title": "cfg",
          "type": "String/Array",
          "name": "dragGroup",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The ddgroup name(s) for the View's DragZone.",
          "memberOf": "Roo.DDView"
        },
        "dropGroup": {
          "*object": "DocTag",
          "title": "cfg",
          "type": "String/Array",
          "name": "dropGroup",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The ddgroup name(s) for the View's DropZone.",
          "memberOf": "Roo.DDView"
        },
        "copy": {
          "*object": "DocTag",
          "title": "cfg",
          "type": "Boolean",
          "name": "copy",
          "isOptional": false,
          "defaultValue": "",
          "desc": "Causes drag operations to copy nodes rather than move.",
          "memberOf": "Roo.DDView"
        }
      },
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@class Roo.DDView\n@desc A DnD enabled version of Roo.View.\n@param {Element/String} container The Element in which to create the View.\n@param {String} tpl The template string used to create the markup for each element of the View\n@param {Object} config The configuration properties. These include all the config options of\n{@link Roo.View} plus some specific to this class.<br>\n<p>\nDrag/drop is implemented by adding {@link Roo.data.Record}s to the target DDView. If copying is\nnot being performed, the original {@link Roo.data.Record} is removed from the source DDView.<br>\n<p>\nThe following extra CSS rules are needed to provide insertion point highlighting:<pre><code>\n.x-view-drag-insert-above {\n\tborder-top:1px dotted #3366cc;\n}\n.x-view-drag-insert-below {\n\tborder-bottom:1px dotted #3366cc;\n}\n</code></pre>\n\n \n",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "class",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Roo.DDView"
          },
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "A DnD enabled version of Roo.View."
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Element/String",
            "name": "container",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The Element in which to create the View."
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "tpl",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The template string used to create the markup for each element of the View"
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Object",
            "name": "config",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The configuration properties. These include all the config options of\n{@link Roo.View} plus some specific to this class.<br>\n<p>\nDrag/drop is implemented by adding {@link Roo.data.Record}s to the target DDView. If copying is\nnot being performed, the original {@link Roo.data.Record} is removed from the source DDView.<br>\n<p>\nThe following extra CSS rules are needed to provide insertion point highlighting:<pre><code>\n.x-view-drag-insert-above {\n\tborder-top:1px dotted #3366cc;\n}\n.x-view-drag-insert-below {\n\tborder-bottom:1px dotted #3366cc;\n}\n</code></pre>"
          },
          {
            "*object": "DocTag",
            "title": "cfg",
            "type": "String/Array",
            "name": "dragGroup",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The ddgroup name(s) for the View's DragZone.",
            "memberOf": "Roo.DDView"
          },
          {
            "*object": "DocTag",
            "title": "cfg",
            "type": "String/Array",
            "name": "dropGroup",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The ddgroup name(s) for the View's DropZone.",
            "memberOf": "Roo.DDView"
          },
          {
            "*object": "DocTag",
            "title": "cfg",
            "type": "Boolean",
            "name": "copy",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Causes drag operations to copy nodes rather than move.",
            "memberOf": "Roo.DDView"
          }
        ]
      },
      "_name": "Roo.DDView",
      "name": "Roo.DDView",
      "alias": "Roo.DDView",
      "desc": "A DnD enabled version of Roo.View.",
      "classDesc": "Roo.DDView",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.DDView#isFormField": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "OBJECT",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DDView.js",
      "cfgs": {
        "allowCopy": {
          "*object": "DocTag",
          "title": "cfg",
          "type": "Boolean",
          "name": "allowCopy",
          "isOptional": false,
          "defaultValue": "",
          "desc": "Causes ctrl/drag operations to copy nodes rather than move.",
          "memberOf": "Roo.DDView#isFormField"
        }
      },
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n\t@cfg {Boolean} allowCopy Causes ctrl/drag operations to copy nodes rather than move. ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "cfg",
            "type": "Boolean",
            "name": "allowCopy",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Causes ctrl/drag operations to copy nodes rather than move.",
            "memberOf": "Roo.DDView#isFormField"
          }
        ]
      },
      "_name": "Roo.DDView#isFormField",
      "name": "Roo.DDView#isFormField",
      "alias": "Roo.DDView#isFormField",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "desc": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.DDView#getName": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DDView.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": false,
        "src": "\n@desc \tAllows this class to be an Roo.form.Field so it can be found using {@link Roo.form.BasicForm#findField}. ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Allows this class to be an Roo.form.Field so it can be found using {@link Roo.form.BasicForm#findField}."
          }
        ]
      },
      "_name": "Roo.DDView#getName",
      "name": "Roo.DDView#getName",
      "alias": "Roo.DDView#getName",
      "desc": "Allows this class to be an Roo.form.Field so it can be found using {@link Roo.form.BasicForm#findField}.",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.DDView#setValue": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DDView.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": false,
        "src": "\n@desc \tLoads the View from a JSON string representing the Records to put into the Store. ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Loads the View from a JSON string representing the Records to put into the Store."
          }
        ]
      },
      "_name": "Roo.DDView#setValue",
      "name": "Roo.DDView#setValue",
      "alias": "Roo.DDView#setValue",
      "desc": "Loads the View from a JSON string representing the Records to put into the Store.",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.DDView#getValue": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [
        {
          "*object": "DocTag",
          "title": "return",
          "type": "String",
          "name": "",
          "isOptional": false,
          "defaultValue": "",
          "desc": "a parenthesised list of the ids of the Records in the View."
        }
      ],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DDView.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n\t@return {String} a parenthesised list of the ids of the Records in the View. ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "return",
            "type": "String",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "a parenthesised list of the ids of the Records in the View."
          }
        ]
      },
      "_name": "Roo.DDView#getValue",
      "name": "Roo.DDView#getValue",
      "alias": "Roo.DDView#getValue",
      "type": "String",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "desc": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "version": ""
    },
    "Roo.DDView#getTargetFromEvent": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DDView.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": false,
        "src": "\n@desc \tPart of the Roo.dd.DropZone interface. If no target node is found, the\n\twhole Element becomes the target, and this causes the drop gesture to append.\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Part of the Roo.dd.DropZone interface. If no target node is found, the\n\twhole Element becomes the target, and this causes the drop gesture to append."
          }
        ]
      },
      "_name": "Roo.DDView#getTargetFromEvent",
      "name": "Roo.DDView#getTargetFromEvent",
      "alias": "Roo.DDView#getTargetFromEvent",
      "desc": "Part of the Roo.dd.DropZone interface. If no target node is found, the\n\twhole Element becomes the target, and this causes the drop gesture to append.",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.DDView#getDragData": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DDView.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": false,
        "src": "\n@desc \tCreate the drag data which consists of an object which has the property \"ddel\" as\n\tthe drag proxy element. \n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Create the drag data which consists of an object which has the property \"ddel\" as\n\tthe drag proxy element."
          }
        ]
      },
      "_name": "Roo.DDView#getDragData",
      "name": "Roo.DDView#getDragData",
      "alias": "Roo.DDView#getDragData",
      "desc": "Create the drag data which consists of an object which has the property \"ddel\" as\n\tthe drag proxy element.",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.DDView#setDraggable": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DDView.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": false,
        "src": "\n@desc \tSpecify to which ddGroup items in this DDView may be dragged. ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Specify to which ddGroup items in this DDView may be dragged."
          }
        ]
      },
      "_name": "Roo.DDView#setDraggable",
      "name": "Roo.DDView#setDraggable",
      "alias": "Roo.DDView#setDraggable",
      "desc": "Specify to which ddGroup items in this DDView may be dragged.",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.DDView#setDroppable": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DDView.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": false,
        "src": "\n@desc \tSpecify from which ddGroup this DDView accepts drops. ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Specify from which ddGroup this DDView accepts drops."
          }
        ]
      },
      "_name": "Roo.DDView#setDroppable",
      "name": "Roo.DDView#setDroppable",
      "alias": "Roo.DDView#setDroppable",
      "desc": "Specify from which ddGroup this DDView accepts drops.",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.DDView#getDropPoint": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DDView.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": false,
        "src": "\n@desc \tDecide whether to drop above or below a View node. ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Decide whether to drop above or below a View node."
          }
        ]
      },
      "_name": "Roo.DDView#getDropPoint",
      "name": "Roo.DDView#getDropPoint",
      "alias": "Roo.DDView#getDropPoint",
      "desc": "Decide whether to drop above or below a View node.",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.DDView#setDeletable": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "imageUrl",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The URL of the \"delete\" icon image."
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "String",
          "name": "imageUrl",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The URL of the \"delete\" icon image."
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DDView.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc \tUtility method. Add a delete option to the DDView's context menu.\n\t@param {String} imageUrl The URL of the \"delete\" icon image.\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Utility method. Add a delete option to the DDView's context menu."
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "String",
            "name": "imageUrl",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The URL of the \"delete\" icon image."
          }
        ]
      },
      "_name": "Roo.DDView#setDeletable",
      "name": "Roo.DDView#setDeletable",
      "alias": "Roo.DDView#setDeletable",
      "desc": "Utility method. Add a delete option to the DDView's context menu.",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.DDView#getContextMenu": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DDView.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": false,
        "src": "\n@desc \tReturn the context menu for this DDView. ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Return the context menu for this DDView."
          }
        ]
      },
      "_name": "Roo.DDView#getContextMenu",
      "name": "Roo.DDView#getContextMenu",
      "alias": "Roo.DDView#getContextMenu",
      "desc": "Return the context menu for this DDView.",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.DDView#remove": {
      "*object": "Symbol",
      "params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Array/Number",
          "name": "selectedIndices",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The index (or Array of indices) of Records to remove."
        }
      ],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [
        {
          "*object": "DocTag",
          "title": "param",
          "type": "Array/Number",
          "name": "selectedIndices",
          "isOptional": false,
          "defaultValue": "",
          "desc": "The index (or Array of indices) of Records to remove."
        }
      ],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DDView.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": true,
        "src": "\n@desc \tRemove {@link Roo.data.Record}s at the specified indices.\n\t@param {Array/Number} selectedIndices The index (or Array of indices) of Records to remove.\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Remove {@link Roo.data.Record}s at the specified indices."
          },
          {
            "*object": "DocTag",
            "title": "param",
            "type": "Array/Number",
            "name": "selectedIndices",
            "isOptional": false,
            "defaultValue": "",
            "desc": "The index (or Array of indices) of Records to remove."
          }
        ]
      },
      "_name": "Roo.DDView#remove",
      "name": "Roo.DDView#remove",
      "alias": "Roo.DDView#remove",
      "desc": "Remove {@link Roo.data.Record}s at the specified indices.",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    },
    "Roo.DDView#onDblClick": {
      "*object": "Symbol",
      "params": [],
      "exceptions": [],
      "inherits": [],
      "isa": "FUNCTION",
      "methods": [],
      "_params": [],
      "properties": [],
      "requires": [],
      "returns": [],
      "see": [],
      "srcFile": "/home/alan/gitlive/roojs1/Roo/DDView.js",
      "cfgs": {},
      "comment": {
        "*object": "DocComment",
        "isUserComment": false,
        "src": "\n@desc \tDouble click fires the event, but also, if this is draggable, and there is only one other\n\trelated DropZone, it transfers the selected node.\n ",
        "meta": "",
        "tags": [
          {
            "*object": "DocTag",
            "title": "desc",
            "type": "",
            "name": "",
            "isOptional": false,
            "defaultValue": "",
            "desc": "Double click fires the event, but also, if this is draggable, and there is only one other\n\trelated DropZone, it transfers the selected node."
          }
        ]
      },
      "_name": "Roo.DDView#onDblClick",
      "name": "Roo.DDView#onDblClick",
      "alias": "Roo.DDView#onDblClick",
      "desc": "Double click fires the event, but also, if this is draggable, and there is only one other\n\trelated DropZone, it transfers the selected node.",
      "augments": [],
      "defaultValue": "",
      "addOn": "",
      "author": "",
      "classDesc": "",
      "deprecated": "",
      "example": "",
      "isEvent": false,
      "isConstant": false,
      "isIgnored": false,
      "isInner": false,
      "isNamespace": false,
      "isPrivate": false,
      "isStatic": false,
      "memberOf": "",
      "since": "",
      "type": "",
      "version": ""
    }
  }
}